<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://womanonrails.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://womanonrails.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2020-05-20T05:33:57-04:00</updated><id>https://womanonrails.com/feed.xml</id><title type="html">Woman on Rails</title><author><name>womanonrails</name></author><entry xml:lang="en"><title type="html">How Ruby casts object into a string?</title><link href="https://womanonrails.com/casting-ruby-object-into-string" rel="alternate" type="text/html" title="How Ruby casts object into a string?" /><published>2020-05-15T00:00:00-04:00</published><updated>2020-05-15T00:00:00-04:00</updated><id>https://womanonrails.com/casting-ruby-object-into-string</id><author><name>womanonrails</name></author><category term="Ruby" /><summary type="html">There was a very simple code to implemented. It brings me a lot of fun when I started the research. I had an array of different objects and I wanted to join them into one string in a special way. An important question here was: How objects will look like after casting into a string? The answer was short - good ;) But this is not the clue of this article. The most important question is: Why objects are cast into string in this way? Here is what I discover during my research.</summary></entry><entry xml:lang="en"><title type="html">Git rebase –onto an overview</title><link href="https://womanonrails.com/git-rebase-onto" rel="alternate" type="text/html" title="Git rebase --onto an overview" /><published>2020-04-05T00:00:00-04:00</published><updated>2020-04-05T00:00:00-04:00</updated><id>https://womanonrails.com/git-rebase-onto</id><author><name>womanonrails</name></author><category term="environment" /><category term="git" /><category term="version control system" /><summary type="html">In article How to change parent branch in git? I talked quickly about using git rebase --onto in a case when you want to replace the current parent branch. But git rebase --onto is more than just replacing parent branch. We can do much more with git rebase --onto help. It’s a good topic to take a look closely. To use it freely first, you need to understand it.</summary></entry><entry xml:lang="en"><title type="html">How change parent branch in git?</title><link href="https://womanonrails.com/replace-parent-branch" rel="alternate" type="text/html" title="How change parent branch in git?" /><published>2020-03-29T00:00:00-04:00</published><updated>2020-03-29T00:00:00-04:00</updated><id>https://womanonrails.com/replace-parent-branch</id><author><name>womanonrails</name></author><category term="environment" /><category term="git" /><category term="version control system" /><summary type="html">A few days ago, I created new branch. I did some commits there, but after a while I noticed, that I created this new branch from the wrong parent branch. I created it from some feature branch not from the master. What I should do in this situation? I need to merge my current branch before I will merge this other feature branch and I don’t want to add not needed commits to mater branch. How can I handle it? Well, here is the time for git.</summary></entry><entry xml:lang="en"><title type="html">TDD - Basics</title><link href="https://womanonrails.com/tdd-basic" rel="alternate" type="text/html" title="TDD - Basics" /><published>2020-02-05T00:00:00-05:00</published><updated>2020-02-05T00:00:00-05:00</updated><id>https://womanonrails.com/tdd-basic</id><author><name>womanonrails</name></author><category term="tdd" /><category term="tests" /><summary type="html">When it comes to programming I always think about the quality. And when we talk about quality, we need to mention testing. Testing software is very important. This is for me so natural, so transparent that almost obvious. I realized that this isn’t obvious to everyone on one of my presentations. I asked the audience about testing and I have already known, that I need to talk about testing more. When I write a code, I also write tests, but I do that in reverse order. First, I write a test, then the code. This are for me two elements in one process - software development. You can see that in normal life too. When you are preparing a dish, you always taste it before serves it to your guests. You want to be sure, that the dish is delicious before you show it. The same should be with applications. First we test application, then we show it to the users.</summary></entry><entry xml:lang="en"><title type="html">4Developers Wroclaw - 2019</title><link href="https://womanonrails.com/4developers-wroclaw-2019" rel="alternate" type="text/html" title="4Developers Wroclaw - 2019" /><published>2020-01-29T00:00:00-05:00</published><updated>2020-01-29T00:00:00-05:00</updated><id>https://womanonrails.com/4developers-wroclaw-2019</id><author><name>womanonrails</name></author><category term="4Developers" /><summary type="html">In 2019 I had an opportunity to be a speaker and participant on three local 4Deveopers events. In Krakow and in Katowice I was presenting my two speeches. I wrote about them an article Speaker at 4Developers 2019. One of my presentations you can watch on YouTube: Are you an Egoistic Programmer? - Step by step refactoring [PL]. The last event was in Wroclaw. This time I was a participant. It was a nice feeling to be there only as a participant. I could focus on conference its self without stressing out. How in few words I can describe 4Developers in Wroclaw? Presentations, discussion with people and a little bit of fun. </summary></entry><entry xml:lang="en"><title type="html">Occupational burnout syndrome</title><link href="https://womanonrails.com/occupational-burnout" rel="alternate" type="text/html" title="Occupational burnout syndrome" /><published>2019-12-11T00:00:00-05:00</published><updated>2019-12-11T00:00:00-05:00</updated><id>https://womanonrails.com/occupational-burnout</id><author><name>womanonrails</name></author><category term="career" /><category term="health" /><summary type="html">Today very important, health related topic. Did you ever feel exhaustion, negativity, cynicism or lack of energy related to your job for a long period of time? Or maybe you have headaches, problems with sleeping, chest pain, a feeling of breathlessness or anger. This all symptoms can be related with occupational burnout syndrome. Read this article to get more information about burnout syndrome before it will affect your health, relations and life.</summary></entry><entry xml:lang="en"><title type="html">Rails Girls Warsaw (19 - 20 October 2019)</title><link href="https://womanonrails.com/rails-girls-warsaw-2019" rel="alternate" type="text/html" title="Rails Girls Warsaw (19 - 20 October 2019)" /><published>2019-11-10T00:00:00-05:00</published><updated>2019-11-10T00:00:00-05:00</updated><id>https://womanonrails.com/rails-girls-warsaw-2019</id><author><name>womanonrails</name></author><category term="Rails Girls" /><category term="Ruby on Rails" /><summary type="html">There it is! The Rails Girls Warsaw 2019 edition! Rails Girls workshops in Warsaw are one of my favorites in Poland. They are always close to my heart. First time I was a mentor at Rails Girls Warsaw in 2014. Now I go around Poland to share my programming knowledge. This time in Warsaw.</summary></entry><entry xml:lang="en"><title type="html">Local editions of 4Developers 2019</title><link href="https://womanonrails.com/4developers-local-events-2019" rel="alternate" type="text/html" title="Local editions of 4Developers 2019" /><published>2019-10-27T00:00:00-04:00</published><updated>2019-10-27T00:00:00-04:00</updated><id>https://womanonrails.com/4developers-local-events-2019</id><author><name>womanonrails</name></author><category term="4Developers" /><summary type="html">In one of my last articles I have written about my new challenge. To be a speaker at a conference. This happened two times at local editions of 4Developers in Krakow and in Katowice. It was for me interesting experience, especially that this audience doesn’t know Ruby as programming language too well. I had a chance to share my knowledge about Ruby and good programming practices with them. In the near future there are going to be two more local editions of 4Developers. And because of that I have a surprise for you which is prepared together with 4Developers organizers. I have for you a discount for these two events and one free ticket which you can win. But let’s start from the beginning.</summary></entry><entry xml:lang="en"><title type="html">Iterators in Ruby</title><link href="https://womanonrails.com/ruby-iterators" rel="alternate" type="text/html" title="Iterators in Ruby" /><published>2019-10-02T00:00:00-04:00</published><updated>2019-10-02T00:00:00-04:00</updated><id>https://womanonrails.com/ruby-iterators</id><author><name>womanonrails</name></author><category term="Ruby" /><summary type="html">Ruby as other programming languages has many ways to repeat instructions. We can use loops for that. Loops like loop, while, until or even for. This is very useful, but Ruby has also something like iterators. Iterators are even more awesome than loops. In Ruby you have many iterators with some specific destiny. You can use each, map, collect, select, find, times or even more. But wait! When should I choose each and when should I choose map? This is a good question! And I’m going to answer it.</summary></entry><entry xml:lang="en"><title type="html">4Developers 2019</title><link href="https://womanonrails.com/4developers-2019" rel="alternate" type="text/html" title="4Developers 2019" /><published>2019-08-07T00:00:00-04:00</published><updated>2019-08-07T00:00:00-04:00</updated><id>https://womanonrails.com/4developers-2019</id><author><name>womanonrails</name></author><category term="4Developers" /><summary type="html">Normally I’m quite active in Rails Girls community. I’m a mentor and an organizer, and also a speaker at Rails Girls workshops. In this year is a little bit different. I spend less time supporting Rails Girls events, but I challenged myself in a different way. I started sending my proposals to the conferences. I wanted to be a speaker at more than just local community groups or Rails Girls events.</summary></entry></feed>