<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Woman on Rails</title>
    <description></description>
    <link>https://womanonrails.com/</link>
    <atom:link href="https://womanonrails.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 22 Aug 2018 03:48:50 -0400</pubDate>
    <lastBuildDate>Wed, 22 Aug 2018 03:48:50 -0400</lastBuildDate>
    <generator>Jekyll v3.4.2</generator>
    
      
      <item>
        <title>Good preparation for interview</title>
        <description>&lt;p&gt;For some time I do interviews. I&amp;#39;m not an HR person. I&amp;#39;m developer. I do technical interviews for my company. My responsibility is to check how experienced is the person which apply for a job. How this person fit to our team from technical and personal point of view. This process is not about being perfect. It&amp;#39;s more about being honest. Finally team and candidate should be able to work together. Today I would like to tell a little bit about what I expect from person to interview. I would like to show my point of view on this kind of conversation.&lt;/p&gt;

&lt;p&gt;For me is very important to respect others time. So I&amp;#39;m always prepared for the conversation. I read a CV, prepare questions regards to skills, knowledge of person and project, which she/he worked with. Each time I do that separately, because each person is different and have different experiences. I spend some time in preparation to don&amp;#39;t waste others time. The same I would like to get from the candidate. To &lt;strong&gt;be prepare&lt;/strong&gt; to the conversation. I don&amp;#39;t expect all correct answers. I expect own opinion, logical thinking, easy moving in technologies which she/he work with. Of course on specific level. It&amp;#39;s depends on the position which we offer. There are different expectations for junior and different expectations for senior.&lt;/p&gt;

&lt;p&gt;As I said the most important to interview is to &lt;strong&gt;be prepared&lt;/strong&gt;. This is the key to success. Even person isn&amp;#39;t someone who we are looking for now. For example, we are looking someone to backend, but a person has more frontend skills, but have an interesting point of view, and is good in her/his job. I will remember this person. And I will reach to this person when we will need someone like she/he. Even this will be another project.&lt;/p&gt;

&lt;p&gt;What those mean &lt;strong&gt;be prepared&lt;/strong&gt;? What you should do to &lt;strong&gt;be prepared&lt;/strong&gt;?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know your CV&lt;/p&gt;

&lt;p&gt;When I start my preparations I always read the CV. This is the base for my starting questions. I ask about projects, technologies, architecture in this project. Everything related to information in the CV. Dates, projects, approximate time of work and other skills, trainings. It is very important to be aware what you have in the CV. So when you are before interview go through all information which you have in the CV and remind yourself what were your responsibilities in this project? What technologies do you use? How you resolved problems? This is not the best impression when you read your own CV on the interview. The same when you say that you don&amp;#39;t remember your last project and it was a month ago. Of course, this is normal that you don&amp;#39;t remember what you did 5 years ago. Although when you go to interview you should remind yourself last 2-3 projects. This is also a good place to tell about one more thing. Never, ever add to your CV elements which you don&amp;#39;t know. It is easy to check your knowledge about that and very hard to change the first bad impression.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remember projects and companies&lt;/p&gt;

&lt;p&gt;This is part of the first point. I would like to mark that. Who should know better projects and companies which you work for, then you? I really ask about this. About the responsibilities in projects, architecture, what is project about. If you don&amp;#39;t want to talk about something or you cannot do that, maybe you shouldn&amp;#39;t put it into the CV. Of course there are projects with NDA. In this case you should also go through this project and think what you can say and what not. This is an example how I prepare questions: If you put in a CV that your project was done on microservices, you should know how looks like architecture? How it looks like communication between services? What is for your service? Do you like this kind of architecture? Advantages and disadvantages?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What&amp;#39;s new in your sector&lt;/p&gt;

&lt;p&gt;This not only related to the interview. You should know the news from your environment on daily bases. In my opinion working in IT need developing skill all the time. I know it is hard to know all news. I also have problem to stay keep up to date with technology, but still trying. It is good to refresh knowledge from time to time. On interview, I will ask about: What is the last version of your language? What are the new features in the framework? Any new libraries? New concepts or ideas? This will allow me to check how you take care about your skills. I know it is impossible to know everything if you don&amp;#39;t know something just tell me that. As I say, be honest, don&amp;#39;t lie.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tools, workflow, interesting applications&lt;/p&gt;

&lt;p&gt;I always ask about workflow, about tools, editors, system, version control. How you work? Which libraries, gems do you use? Everything related to work. How to be effective? How to have good communication with the team? How to check if the code is good quality? Maybe you know something about TDD, metrics, PR/MR (pull/merge request), code standards, work remotely. I&amp;#39;m interested in your opinion about this topic. I would like to know if you are conscious programmer. If you know, what will make you more effective. What will increase the comfort of your work?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Architecture&lt;/p&gt;

&lt;p&gt;What do you do in project to have good architecture, good code quality? What do you do to be able in fast and easy way make some changes in the code? Design patters? Programming rules? Code standard? Main concept of language? Frameworks?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Company information&lt;/p&gt;

&lt;p&gt;This is more important for you. You apply for a job. You should know: What company does? What is product of this company? What is a market for them? How looks structure of the company? How looks theirs product? Sometime on an interview I ask about this information but rarely. This should be interesting for you. It is better known this information before sending a CV. You will save your and also others time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be prepare to show you code&lt;/p&gt;

&lt;p&gt;On short conversation, it is hard to ask all questions and check all knowledge. Specially code related. So I always ask about some code example, project access. It is very good when a person has something to show and this is not only Rails Scaffold. This should be something which you are proud of.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be ready to some live coding&lt;/p&gt;

&lt;p&gt;I know this is a very stressful situation. Especially when someone watches you each move. For me it is one of the best possibilities to check your programming skills. How you handle problems, how you work with stress, how you think about the problem, how look like your communication skills. At this moment don&amp;#39;t think about me just say what you are doing, think about the problem, ask when something is not clear and everything will be fine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Methodologies&lt;/p&gt;

&lt;p&gt;When this is not your first project you should be able to say something about methodologies. Do you work in a team? How you work? How big was your team? How did you organize your work? Did you use any methodology? Which one? Do you use Scrum, Agile, Waterfall, Lean? What you use for communications? How you fix bugs, create new features? How you deal with your client? How you solved problems? What you like and don&amp;#39;t like in this methodology? And why?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare some questions for me&lt;/p&gt;

&lt;p&gt;It is a lot of things you would like to ask. Maybe about our workflow. About team. About features. About code quality. Architecture. I always really happy to answer your questions. There is nothing better than person which know what he/she know or not. And have enough courage to ask, questions. Finally, you also be excited to join our team.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is one more and very important request for you. All these tips are from my point of view. What I expect from person to interview. This is not a way to cheat, but way to be better prepared. Be honest with yourself and with recruiter. In the end this is important for both sides to know each other. To check if we match together. A company can choose you, but you also need to choose the company. This is some kind of agreement. Everyone should be happy about working together.&lt;/p&gt;

&lt;p&gt;Do you know any other tips how to prepare to interview? If so, please add them in the comments. Have a nice time and see you next time!&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Apr 2017 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/interview</link>
        <guid isPermaLink="true">https://womanonrails.com/interview</guid>
        
        <category>interview</category>
        
        <category>skills</category>
        
        
        <category>interview</category>
        
        <category>skills</category>
        
      </item>
    
      
      <item>
        <title>Sublime Text Editor</title>
        <description>&lt;p&gt;I think almost every programmer has his own favourite text editor. Some people like &lt;a href=&quot;https://en.wikipedia.org/wiki/Vim_(text_editor)&quot;&gt;Vim&lt;/a&gt;, some people like &lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;Notepad++&lt;/a&gt; and I love &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;. There is a lots of useful shortcuts, snippets and plugins which allow in fast and easy way work with code or simple text.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;I can see up to 4 file in the same time.&lt;/p&gt;

&lt;p&gt;Sublime has option to see more then one file at the same time. If you add &lt;a href=&quot;https://github.com/SublimeText/Origami&quot;&gt;Origami&lt;/a&gt; plugin, you can have event more then 4 panels. To use basic Sublime splitting panels you just go to &lt;code&gt;View -&amp;gt; Layout&lt;/code&gt; and you can choose which layout you like or you can also see shortcuts for that. I like to have two files open. First with code and second with tests. This is very useful when you work in TDD. You don&amp;#39;t need to switch between windows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Everything is customizable&lt;/p&gt;

&lt;p&gt;You just go to &lt;code&gt;Preferences -&amp;gt; Settings&lt;/code&gt;. There is everything you will need for customization. Colors, behaviors, everything. I recommend also to go through other setups in &lt;code&gt;Preferences&lt;/code&gt; menu. Spectialy &lt;code&gt;Packages&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding new packages&lt;/p&gt;

&lt;p&gt;If you like you can extend Sublime behaviors by installing new packages. You can look at some of my favorites packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://emmet.io/&quot;&gt;Emmet&lt;/a&gt; - for fast and easy creation of HTML or CSS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facelessuser/BracketHighlighter&quot;&gt;BracketHighlighter&lt;/a&gt; - to show you where you start and end brackets, this is nice specialy when you have programming language like JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jisaacks/GitGutter&quot;&gt;Git Gutter&lt;/a&gt; - to show which part of code are changed or added (integration with git, see &lt;a href=&quot;/what-is-git&quot;&gt;what is git&lt;/a&gt; article)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dzhibas/SublimePrettyJson&quot;&gt;SublimePrettyJson&lt;/a&gt; - formatter for JSON, this is very useful when you have JSON in one line and you would like to read it easly&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pderichs/sublime_rubocop&quot;&gt;RuboCop&lt;/a&gt; - to show good practices in Ruby&lt;/li&gt;
&lt;li&gt;Linters (Coffee Script, CSS, Sass, JS) - tools which shows good practices in different languages&lt;/li&gt;
&lt;li&gt;Colorful syntaxt - you can add colors for different programing language syntax, when you don&amp;#39;t have specific colorization just install it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more plugins checkout in the Internet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Shortcuts, shortcuts, shortcuts&lt;/p&gt;

&lt;p&gt;To be honest I love shortcuts. This is the reason why I write this article. As long as I can work without mouse, only using keyboard then it&amp;#39;s better. This is less time consuming then mouse usage. And Sublime has very useful shortcuts. You can see below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + b&lt;/code&gt; - toggle side bar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + 0&lt;/code&gt; - go to side bar with folders (then you can use arrows to navigate between folders and files, &lt;code&gt;enter ↩&lt;/code&gt; opens selected file and move focus to this file)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + 1,2,3,4&lt;/code&gt; - move focus between open panels/group (it depends layout you choose)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ←, →&lt;/code&gt; - go to word beginning/ending&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + ←, →&lt;/code&gt; - select last/next word&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + m&lt;/code&gt; - jump to closing/opening bracket for current code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + m&lt;/code&gt; - select all contents of the current brackets (curly brackets, square brackets, parentheses)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + PgUp, PgDn&lt;/code&gt; - go to last/next open tab (file)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + tab&lt;/code&gt; - next used tab/file open in one panel&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + tab&lt;/code&gt; - last used tab/file open in one panel&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ↑, ↓&lt;/code&gt; -  move file up/down by one line (like scroll)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + ↑, ↓&lt;/code&gt; - switch lines in neighbourhood, first line goes up, second goes down&lt;/li&gt;
&lt;li&gt;&lt;code&gt;crtl + /&lt;/code&gt; - comment/un-comment line (it depends selected programming language)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + delete&lt;/code&gt; - remove all next words (without adding to clipboard)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + backspace&lt;/code&gt; - remove all words before (without adding to clipboard)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + k&lt;/code&gt; - remove all next words (without adding to clipboard)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + k&lt;/code&gt; - remove line (without adding to clipboard)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ↩&lt;/code&gt; - insert line after&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + ↩&lt;/code&gt; - insert line before&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + j&lt;/code&gt; - join line below to the end of the current line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + alt + j&lt;/code&gt; - preatty JSON power by SublimePrettyJson&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ]&lt;/code&gt; - indent current line(s)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + [&lt;/code&gt; - un-indent current line(s)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + a&lt;/code&gt; - select all file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + l&lt;/code&gt; - select all line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + d&lt;/code&gt; - select word (repeat select others occurrences in context for multiple editing)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + d&lt;/code&gt; - duplicate line(s)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + u&lt;/code&gt; - upper case&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + l&lt;/code&gt; - lower case&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + c&lt;/code&gt; - copy selected text to clipboard or when you have cursor in line without selected text copy all line to clipboard&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + v&lt;/code&gt; - paste selected text or all line from clipboard&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + x&lt;/code&gt; - cut selected text or all line (when text is not selected) to clipboard&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + g&lt;/code&gt; - go to line in current file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ;&lt;/code&gt; - go to word in current file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + r&lt;/code&gt; - look for symbol (functions, method name, classes) in the file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + r&lt;/code&gt; - look for symbol (functions, method name, classes) in all projects&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + t&lt;/code&gt; - replace letter in neighbourhood&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + t&lt;/code&gt; - open last closed tab (just like in your browser)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + h&lt;/code&gt; - replace one phrase to another in current file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + f&lt;/code&gt; - search in file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + f&lt;/code&gt; - search in all project (directory), you can also replase phrase in this project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + q&lt;/code&gt; - close Sublime completly&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + w&lt;/code&gt; - close current file/tab&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + w&lt;/code&gt; - close all window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + n&lt;/code&gt; - open new tab&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + n&lt;/code&gt; - open new window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + s&lt;/code&gt; -  save file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + s&lt;/code&gt; - save as (you can choose new name of file)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + o&lt;/code&gt; - open file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + o&lt;/code&gt; - open new directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + p&lt;/code&gt; - quick-open files by name in your project (you can search by first letters of each part of file name example: searching &lt;code&gt;mnf&lt;/code&gt; sublime will find &lt;code&gt;my_new_file.txt&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + p&lt;/code&gt; - command line and package installer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + z&lt;/code&gt; - undo you last change&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + z&lt;/code&gt; - redo your last change&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + y&lt;/code&gt; - do one more time last action&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f6&lt;/code&gt; - check spelling base on set dictionary (in my case english)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f9&lt;/code&gt; - do alphabetical order of selected lines&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f3&lt;/code&gt; - next searched phrase&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f3 + shift&lt;/code&gt; - last searched phrase&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope you find this useful. See you next time!&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Feb 2017 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/sublime</link>
        <guid isPermaLink="true">https://womanonrails.com/sublime</guid>
        
        <category>tools</category>
        
        <category>sublime</category>
        
        
        <category>sublime</category>
        
        <category>tools</category>
        
      </item>
    
      
      <item>
        <title>Quick overview Ruby each_with_object method</title>
        <description>&lt;p&gt;I worked in last a few days with &lt;code&gt;each_with_object&lt;/code&gt; method. Every time when I would like to use some method in Ruby I try read documentation one more time and I look on some example of usage. This time I went through &lt;a href=&quot;https://apidock.com/ruby/v1_9_2_180/Enumerable/each_with_object&quot;&gt;APIdock&lt;/a&gt; and I noticed that in theirs documentation is missing one very nice example of usage &lt;code&gt;each_with_object&lt;/code&gt; method. I tried to add this missing part there, but without success. In meantime when I&amp;#39;m waiting for message from APIdoc support I decided to write short note here about this.&lt;/p&gt;

&lt;p&gt;The most useful and I think the most popular usage of &lt;code&gt;each_with_object&lt;/code&gt; is putting hash or array as an argument. You can do this like in example below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[:foo, :bar, :jazz].each_with_object({}) do |item, hash|
  hash[item] = item.to_s.upcase
end
 =&amp;gt; {:foo=&amp;gt;&amp;quot;FOO&amp;quot;, :bar=&amp;gt;&amp;quot;BAR&amp;quot;, :jazz=&amp;gt;&amp;quot;JAZZ&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).each_with_object([]) do |item, array|
  array &amp;lt;&amp;lt; item ** 2
end
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I know this examples are trivial, but they show main rules. You don&amp;#39;t need to declare array or hash before your loops for example like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array = []
(1..10).each do |item|
  array &amp;lt;&amp;lt; item ** 2
end
array
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I know this example can be also replace with &lt;code&gt;map&lt;/code&gt; use case. Like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).map { |item| item ** 2 }
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other nice example of &lt;code&gt;each_with_object&lt;/code&gt; usage is frequency hash:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;one&amp;#39;, &amp;#39;one&amp;#39;].each_with_object(Hash.new(0)) do |item, hash|
  hash[item] += 1
end
 =&amp;gt; {&amp;quot;one&amp;quot;=&amp;gt;3, &amp;quot;two&amp;quot;=&amp;gt;1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case we use hash with default value set to &lt;code&gt;0&lt;/code&gt; and now counting occurrence is easy and quick. You don&amp;#39;t need to do &lt;code&gt;if&lt;/code&gt; statement to be sure that you are nil safe like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if hash[item]
  hash[item] += 1
else
  hash[item] = 0
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You cannot use immutable objects like numbers. Example below does not return 55 but 0.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).each_with_object(0) do |item, sum|
  sum += item
end
 =&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, we can do that in different way:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).reduce(:+)
 =&amp;gt; 55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).inject(:+)
 =&amp;gt; 55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or in Rails:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).sum
 =&amp;gt; 55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By the way, what is difference between &lt;code&gt;reduce&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt;? There is no difference. This two methods are &lt;a href=&quot;http://ruby-doc.org/core-2.4.0/Enumerable.html#method-i-inject&quot;&gt;aliases&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this place we should add one more thing. &lt;code&gt;inject&lt;/code&gt; method we can use similar to &lt;code&gt;each_with_object&lt;/code&gt; but order of arguments in block is different and we need always remember to put in last line of block our accumulator value. Look here:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).inject([]) do |array, item|
  array &amp;lt;&amp;lt; item ** 2
end
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[:foo, :bar, :jazz].inject({}) do |hash, item|
  hash[item] = item.to_s.upcase
  hash
end
 =&amp;gt; {:foo=&amp;gt;&amp;quot;FOO&amp;quot;, :bar=&amp;gt;&amp;quot;BAR&amp;quot;, :jazz=&amp;gt;&amp;quot;JAZZ&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we use &lt;code&gt;array &amp;lt;&amp;lt; item ** 2&lt;/code&gt; this command always returns all array, but for this second example &lt;code&gt;hash[item] = item.to_s.upcase&lt;/code&gt; returns &lt;code&gt;item.to_s.upcase&lt;/code&gt; not all &lt;code&gt;hash&lt;/code&gt; so we need to remember about adding &lt;code&gt;hash&lt;/code&gt; on the end.&lt;/p&gt;

&lt;p&gt;And now the missing part for &lt;code&gt;each_with_object&lt;/code&gt;. You can use this method also on hash not only on arrays or enumerators. This looks a little bit different than before. Let I show you:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{ foo: 1, bar: 2, jazz: 3 }.each_with_object({}) do |(key, value), hash|
  hash[key] = value**2
end
 =&amp;gt; {:foo=&amp;gt;1, :bar=&amp;gt;4, :jazz=&amp;gt;9}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or like this&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{ foo: 1, bar: 2, jazz: 3 }.each_with_object([]) do |(key, value), array|
  array &amp;lt;&amp;lt; { id: value, name: key }
end
 =&amp;gt; [{:id=&amp;gt;1, :name=&amp;gt;:foo}, {:id=&amp;gt;2, :name=&amp;gt;:bar}, {:id=&amp;gt;3, :name=&amp;gt;:jazz}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was quick overview for method &lt;code&gt;each_with_object&lt;/code&gt;. I hope you like this examples like I do. If you have any question leave them below and see you next time!&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jan 2017 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/each-with-object</link>
        <guid isPermaLink="true">https://womanonrails.com/each-with-object</guid>
        
        <category>Ruby</category>
        
        <category>tips</category>
        
        
        <category>Ruby</category>
        
        <category>tips</category>
        
      </item>
    
      
      <item>
        <title>Web Summit Lisbon 2016</title>
        <description>&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;It took me some time from last post. So many things happened: events, workshops, travel. But I&amp;#39;m back! Today I would like to share my thoughts about &lt;a href=&quot;https://websummit.net/&quot;&gt;Web Summit&lt;/a&gt;. This is big conference (exhibition for startups). I was on this conference once in &lt;a href=&quot;/websummit&quot;&gt;Dublin&lt;/a&gt; and now in Lisbon. I decided to come because as a &lt;em&gt;Woman in Tech&lt;/em&gt; I got free ticket. Maybe because of that I should not talk about what I don&amp;#39;t like. On the other hand I think when no one talks about disadvantage, conference can not be better next time.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Too big for me&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Ruby community we have quote: &lt;em&gt;If you want to build big application, just don&amp;#39;t do that&lt;/em&gt;. I think the same is for conference. This conference was too big. A lot of people in metro waiting for transportation, a lot of people in queue waiting first day to get inside. Queues everywhere: for food, conference stages, startups, toilets and so on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do I really have matter?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There were so many people, that I was thinking if someone like me is important for this conference. For sure conference still will take a place without me. No one would notice that I&amp;#39;m not there. So my questions are: Do I really have matter? My opinion, my presence, my comfort? Or am I just next person on this big event?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Is it for developer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;m a tech woman and I went to Web Summit to learn something new. I don&amp;#39;t have startup, I&amp;#39;m not a business person. I&amp;#39;m just a developer. From my perspective there were a lot of inspiring talks and panels but 20 minutes it&amp;#39;s not enough to go deeper in topic. So this was disappointed for me. Most of my time I spent walking around startups area. Talking with people. This was much more interesting and much more technical then talks and panels on stages. Don&amp;#39;t understand me wrong. There were a lot of very good talks but from developer perspective there were too low number of technical staff. For me this was more exhibition of startups then conference. I think this is place for business more then for developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tech women perspective&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I really appreciate that I had chance to get free ticket for this conference. Organizers did a lot to bring women to Web Summit. I think this is very nice that organizers see problem and try to do something to resolve it. But... Simple thing T-shirt. Even I got T-shirt size S for man it is too big so I only can sleep in this T-shirt. Next thing completely separate space for women with &lt;em&gt;Women in Tech&lt;/em&gt; on ticket. For me this was misunderstanding. Why only Woman in Tech could go there? Why other women cannot? And why men which support us in Tech can&amp;#39;t join also? I know a lot of great men which help and support me and others women. I think they deserve for respect. In my opinion women don&amp;#39;t need special place in IT. I would like to be treat the same like men. This lounge looks for me more like zoo or aquarium than same safe palce to relax. And I really don&amp;#39;t like this idea. We should be in the same place where men are, to show good example to others. To show that in IT we are normal developers like men.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;I appreciate that I could come to Web Summit and be participant on this conference. But if I would buy the ticket as a developer I would be disappointed. I really love small conference where you feel like in home, where everyone (almost everyone) know each other&amp;#39;s. Where everyone care for each others. The best thing of Web Summit was amazing people which I met there. I&amp;#39;m so happy that even on that huge event I could meet so wonderful people from different countries. That&amp;#39;s all what I would like to say. I hope the next edition will be better.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Nov 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/websummit-lisbon-2016</link>
        <guid isPermaLink="true">https://womanonrails.com/websummit-lisbon-2016</guid>
        
        <category>Web Summit</category>
        
        <category>Lisbon</category>
        
        
        <category>events</category>
        
        <category>travels</category>
        
        <category>workshops</category>
        
      </item>
    
      
      <item>
        <title>Leaflet - Introduction to maps</title>
        <description>&lt;p&gt;I&amp;#39;m back on track. This time I would like to talk with you about maps. How easy we can work with maps nowadays. To be able to use maps on my website I will be using:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt; - JavaScript library for interactive maps&lt;/li&gt;
&lt;li&gt;Maps tiles&lt;/li&gt;
&lt;li&gt;Ruby on Rails (not required but you need to have at least some &lt;strong&gt;html&lt;/strong&gt; file)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So first things first. What are they &lt;strong&gt;maps tiles&lt;/strong&gt;? In simple words they are small square images, which show a map. They are served in packages. So on our website we see many of them.&lt;/p&gt;

&lt;h2&gt;How we can get tiles?&lt;/h2&gt;

&lt;p&gt;For beginning we can sign in into &lt;a href=&quot;https://www.mapbox.com/&quot;&gt;Mapbox&lt;/a&gt; which generates this kind of images or we can use &lt;a href=&quot;https://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt;. There are lot of services which also generate tiles. I will try to include some of them on the end.&lt;/p&gt;

&lt;h2&gt;Preparation&lt;/h2&gt;

&lt;p&gt;When we have in our application &lt;strong&gt;Leaflet&lt;/strong&gt; library and we decided which tiles set we will be using, we can start.&lt;/p&gt;

&lt;p&gt;On our &lt;code&gt;index.html&lt;/code&gt; file we need to add:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And on our JavaScript file we need to set selected maps tiles. In this examples I will be using CoffeeScript but the same behaviour you can get in JavaScript.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;map = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.301&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.654&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Mapbox tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/mapbox.png&quot;&gt;&lt;img src=&quot;/images/leaflet/mapbox.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map data &amp;amp;copy; &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt; contributors, &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/2.0/&amp;quot;&amp;gt;CC-BY-SA&amp;lt;/a&amp;gt;, Imagery © &amp;lt;a href=&amp;quot;http://mapbox.com&amp;quot;&amp;gt;Mapbox&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;your id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;accessToken: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;your token&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;OpenStreetMap tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/osm.png&quot;&gt;&lt;img src=&quot;/images/leaflet/osm.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://{s}.tile.osm.org/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map data &amp;amp;copy; &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt; contributors, &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/2.0/&amp;quot;&amp;gt;CC-BY-SA&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Toner tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/toner.png&quot;&gt;&lt;img src=&quot;/images/leaflet/toner.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://tile.stamen.com/toner/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map tiles by &amp;lt;a href=&amp;quot;http://stamen.com&amp;quot;&amp;gt;Stamen Design&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by/3.0&amp;quot;&amp;gt;CC BY 3.0&amp;lt;/a&amp;gt;. Data by &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://www.openstreetmap.org/copyright&amp;quot;&amp;gt;ODbL&amp;lt;/a&amp;gt;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;WaterColor tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/watercolor.png&quot;&gt;&lt;img src=&quot;/images/leaflet/watercolor.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://tile.stamen.com/watercolor/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map tiles by &amp;lt;a href=&amp;quot;http://stamen.com&amp;quot;&amp;gt;Stamen Design&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by/3.0&amp;quot;&amp;gt;CC BY 3.0&amp;lt;/a&amp;gt;. Data by &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/3.0&amp;quot;&amp;gt;CC BY SA&amp;lt;/a&amp;gt;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;#39;s it! When you refresh your website you should see map.&lt;/p&gt;

&lt;h2&gt;Putting objects on map&lt;/h2&gt;

&lt;p&gt;Now is time for fun! We can put on map different objects. One very important thing - each object on map has it own coordinates (like in Maths). In Leaflet are used two coordinate system. &lt;strong&gt;Cartesian coordinate geometry&lt;/strong&gt; and &lt;strong&gt;Lat-long system&lt;/strong&gt;. In first one point is &lt;code&gt;[longitude, latitude]&lt;/code&gt; in second &lt;code&gt;[latitude, longitude]&lt;/code&gt;. It is very easy to remember where is used which coordination system. For &lt;code&gt;GeoJSON&lt;/code&gt; object we use &lt;strong&gt;Cartesian notation&lt;/strong&gt; and for the rest &lt;strong&gt;Lat-long notation&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;Marker&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/marker.png&quot;&gt;&lt;img src=&quot;/images/leaflet/marker.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;marker = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.28895538456755&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.681907653808594&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Custom marker&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/custom-marker.png&quot;&gt;&lt;img src=&quot;/images/leaflet/custom-marker.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;customIcon = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconUrl: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;assets/womanonrails.jpg&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconSize: &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconAnchor: &lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;className: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;round&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;customMarker = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29391802001304&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.665471076965332&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;icon: &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customIcon&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;HTML marker&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/html-marker.png&quot;&gt;&lt;img src=&quot;/images/leaflet/html-marker.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;divIcon = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;className: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;div-icon&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;html: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;div&amp;gt;This is my custom html&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconSize: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.2845132498121&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.668603897094727&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;icon: &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Circle&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/circle.png&quot;&gt;&lt;img src=&quot;/images/leaflet/circle.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;circle = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.290024725454515&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.640880584716797&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;color: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;fillColor: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;#f03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;fillOpacity: &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Polygon&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/poligon.png&quot;&gt;&lt;img src=&quot;/images/leaflet/poligon.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;polygon = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;polygon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29830444909283&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.61384391784668&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29619353058144&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.620710372924805&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29084727901576&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.616890907287598&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29125855046426&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.61354351043701&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.2941373510724&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;18.611998558044434&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29830444909283&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.61384391784668&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Popups&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/popup.png&quot;&gt;&lt;img src=&quot;/images/leaflet/popup.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;b&amp;gt;Hello world!&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;I am a popup.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am a circle.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;polygon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am a polygon.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;popup = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setLatLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;51.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am a standalone popup.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Events&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/event.png&quot;&gt;&lt;img src=&quot;/images/leaflet/event.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;onMapClick = &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;(e) -&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Coordinate: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMapClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;onMapClick = &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;(e) -&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;popup = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setLatLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;You clicked the map at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Coordinate: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMapClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;GeoJSON&lt;/h4&gt;

&lt;p&gt;I think the most powerful element of Leaflet is &lt;code&gt;geoJson&lt;/code&gt;. You can display every of further objects using &lt;code&gt;geoJson&lt;/code&gt;. Also you can use &lt;strong&gt;GIS&lt;/strong&gt; data from data base like &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; and directly use in &lt;code&gt;geoJson&lt;/code&gt; object. For this element you can also use some styling or binding events.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;geoData = &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Polygon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.613758087158203&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.298386690775416&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.618135452270508&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.3022518894775&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.619508743286133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.302279301112605&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.62457275390625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.30570563109659&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.62959384918213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.30510261491786&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.624873161315918&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.3016488295082&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.627877235412598&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.3005797498622&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.622384071350098&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.29600162425392&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.613758087158203&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.298386690775416&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;style = &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#ff7800&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;weight&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;opacity&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.65&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geoJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;style: &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;On the end&lt;/h2&gt;

&lt;p&gt;This is only a small pieces of &lt;strong&gt;Leaflet&lt;/strong&gt; possibilities. If you looking for more (for example drawing on map) checkout links below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Leaflet/Leaflet.draw&quot;&gt;Leaflet Draw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://geojson.io/&quot;&gt;GeoJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liedman.net/leaflet-routing-machine/&quot;&gt;Leaflet Routing Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/?csw=1&quot;&gt;Google Maps Javascript API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/modestmaps/modestmaps-js&quot;&gt;Modest Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/maps/&quot;&gt;Bing maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.pl/maps?source=tldso&quot;&gt;Google Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/&quot;&gt;Mapbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.maptiler.com/&quot;&gt;MapTiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://maps.stamen.com/&quot;&gt;Maps Stamen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mapquest.com/&quot;&gt;Map Quest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Tiles&quot;&gt;Tiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 13 Aug 2016 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/leaflet</link>
        <guid isPermaLink="true">https://womanonrails.com/leaflet</guid>
        
        <category>maps</category>
        
        <category>geo data</category>
        
        <category>tips</category>
        
        
        <category>geo data</category>
        
        <category>maps</category>
        
        <category>tips</category>
        
      </item>
    
      
      <item>
        <title>Working remote</title>
        <description>&lt;p&gt;For me, there are two types of remote work. &lt;strong&gt;Synchronic&lt;/strong&gt; and &lt;strong&gt;asynchronic&lt;/strong&gt; remote work. Synchronic remote work is work from different places but in the same time. For example I&amp;#39;m working from 9am to 5pm in Europe time zone. Second one - asynchronic remote work is when you are working from different places and in different times. So, it is possible to don&amp;#39;t have chance to talk with anyone through all day work.&lt;/p&gt;

&lt;p&gt;I only have experience in synchronic remote work. So this article will be about my feelings and my thoughts about this kind of remote work.&lt;/p&gt;

&lt;h2&gt;Day by day work&lt;/h2&gt;

&lt;p&gt;When I work remotly from my home or open space in most cases work looks like normaly day in office. But in my offce each person in team has separate room and we don&amp;#39;t go to others rooms. One time per day we have meeting (Hangout or Sykpe). And that&amp;#39;s it. Rest of my day it is normal work. I have to do my tasks and I do what I should. When I need to talk with someone I write a message on communicator (Slack or Skype). The most important thing in this kind of work is &lt;strong&gt;trust&lt;/strong&gt;. Trust that each team member does what he/she should to get things done.&lt;/p&gt;

&lt;h3&gt;My observations:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Less people around my desk, then I can better focus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How many times do you waste your time for funny conversations? How many times someone interrupt you in your work to ask something? How many times you need to go to boring and useless meeting? There are many reasons for break.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;I can work from any place from office, from home, from Warsaw or Krakow. It doesn&amp;#39;t matter.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is very nice I can work from home when I need it. Or I can go to my family and working from theirs house. Or go to another country.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;I need to be well organized to plan my work and my communication.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because time when all team members are on one meeting is very short I need to be prepare to ask necessary questions, to announce most important informations for team. I need to be good organized when you work. Forget about wasting time for nothing. I need to be motivate to work without any supervisor around me. Remember trust. I trust that others team members working and the same have the same for me. They trust that I working also.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;I need to document all what I can.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most of things connected to project happen in different places. I cannot tell everyone everything, so I write documentation. Work flow documentation, change log documentation, task todo documentation, environment set-up documentation and many, many more.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Australia remote work&lt;/h2&gt;

&lt;p&gt;As I said earlier in remote work I can work from every place in the world. So I decided to spend 6 weeks working remotely from Australia. Sometimes remote work from Australia was very easy. Time went quickly and very productive. But sometimes it was very hard. My team is working in Europe time zone so when I moved to Australia then my work time changed from 9am to 5pm to 6pm to 2am. I decided to work only half time. Big thank you for my team that this was possible. So I worked from 6pm to 10pm. Sometime I was tired after all day but I had work to do. I worked from different places mostly from my bedroom, but also from shopping center, couch in friends living room, hotels or cars. I don&amp;#39;t recommend this last work place specially when you have motion sickness. Some of this places had trouble with Internet connection or didn&amp;#39;t have any. Then I used mobile Internet. Yes I used mobile Internet for work. And the most important sometimes I just would like to have evening just for my self to meet friends and go out.&lt;/p&gt;

&lt;p&gt;Even that there was sometime many problems to deal with, this was my best time ever. I woke up at 7am Australian time. I did my exercises and some hobby stuff and then I have 8 hours to explore Australia. After that I used to sit with my computer and worked. This possibility to work remotely allowed me to visit lot of beautiful places. I felt like I was on holiday in some how. If someone will ask me if this is something worth to try I will say &lt;strong&gt;YES&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/remote/duck.jpg&quot;&gt;&lt;img src=&quot;/images/remote/duck.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/remote/memo1.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo1.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo2.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo2.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo3.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo3.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/remote/formula1.jpg&quot;&gt;&lt;img src=&quot;/images/remote/formula1.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/remote/memo4.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo4.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo5.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo5.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/victoria.jpg&quot;&gt;&lt;img src=&quot;/images/remote/victoria.jpg&quot;&gt;&lt;/a&gt;
  &lt;figcaption&gt;Memories of Australia&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;Remote work give me lot of opportunities. I can work from different places in the world and discover those places like it is impossible in normal work, because I can stay longer and try normal life in this place. You need to remember that this kind of work is not for everyone. You need to be sure that you will be able to focus and do real work. You need to be well organize and be strong in you decision that this is work time.&lt;/p&gt;

&lt;p&gt;When you decide that you will be able to work like this, you need to find answer for this questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is there Internet connection? WiFi?&lt;/li&gt;
&lt;li&gt;Do I have everything what I need on my laptop?&lt;/li&gt;
&lt;li&gt;Is there always access to electricity?&lt;/li&gt;
&lt;li&gt;How much time do I have to work?&lt;/li&gt;
&lt;li&gt;What will I do as my work?&lt;/li&gt;
&lt;li&gt;Where will I be working?&lt;/li&gt;
&lt;li&gt;How organized am I?&lt;/li&gt;
&lt;li&gt;How motivate to work am I?&lt;/li&gt;
&lt;li&gt;What is time zone in my destination?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
From my perspective it is great opportunity. I very happy that I could to try.
This is it. I hope you like this article. If you have any question please leave them below in comments. See you next time!&lt;/p&gt;
</description>
        <pubDate>Sun, 15 May 2016 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/remote-work</link>
        <guid isPermaLink="true">https://womanonrails.com/remote-work</guid>
        
        <category>work</category>
        
        <category>remote</category>
        
        
        <category>remote</category>
        
        <category>travels</category>
        
        <category>work</category>
        
      </item>
    
      
      <item>
        <title>Git Rebase</title>
        <description>&lt;p&gt;I wrote 2 articles about git: &lt;a href=&quot;/what-is-git&quot;&gt;What is git&lt;/a&gt; and &lt;a href=&quot;/git-usage&quot;&gt;Git usage&lt;/a&gt;. There are basic information about git. Today I would like to do something more advanced. Last week I did quick presentation/lighting talk about &lt;code&gt;git rebase&lt;/code&gt;. After that I realize that this is good topic to do short note. So, there you have.&lt;/p&gt;

&lt;p&gt;When we use git, we have two ways to pull new changes from remote repository. &lt;strong&gt;Merge&lt;/strong&gt; and &lt;strong&gt;rebase&lt;/strong&gt;. When we use &lt;strong&gt;merge&lt;/strong&gt; (this is default option) git will try resolve conflicts and put our changes between changes of others in our team (using timeline to this). But when we use &lt;strong&gt;rebase&lt;/strong&gt;, git move our local changes to temporary area and pull all changes from remote repository. Then one by one will move each our local change to branch but on top of all downloaded changes. We say that rebase move your local changes on top of &lt;strong&gt;HEAD&lt;/strong&gt;. We can say that HEAD is something like marker which version is current. When on remote repository are new changes and we don&amp;#39;t have this changes locally we say that we are &lt;strong&gt;behind the HEAD&lt;/strong&gt;. So when we pull all changes from remote repository we are &lt;strong&gt;on HEAD&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/rebase-diagram.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/rebase-diagram.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Ok, let&amp;#39;s move now to visual difference between those two method.&lt;/p&gt;

&lt;h2&gt;Merge&lt;/h2&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/merge.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/merge.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;You can see that even someone do some connected commits, after merge all is one big mess. Even more, we see that there are also commits with title merge and we didn&amp;#39;t create this commits.&lt;/p&gt;

&lt;h2&gt;Rebase&lt;/h2&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/rebase.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/rebase.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Here everything is in order. Connected commits are in one group. We also see history of our branches.&lt;/p&gt;

&lt;h2&gt;How we can do this when our code is only locally?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Switch to develop branch&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download all changes locally&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Switch to specific branch (branch on which you work)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout my-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do rebase&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push changes to remote repository&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sometimes when you use rebase, then it can show some conflicts. You need to resolved them and add changes. Then you can continue rebase.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase develop
&lt;span class=&quot;c&quot;&gt;# resolve conflicts&lt;/span&gt;
git add -u &lt;span class=&quot;c&quot;&gt;# add all changes&lt;/span&gt;
git rebase --continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need to talk about one more thing. Sometimes we have our code on remote repository and after rebase we cannot do &lt;code&gt;git push&lt;/code&gt;. In this case we can use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push -f origin my-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But! You need to be very &lt;strong&gt;careful&lt;/strong&gt;. This command will override all history of change on remote repository for your branch. You must be sure that you don&amp;#39;t lose any change. If you work on branch alone, it is safe but when you work on branch with others you need to be sure what you doing.&lt;/p&gt;

&lt;p&gt;If you like to abort rebase. You can do that in this way.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is it. I showed you how you can use &lt;code&gt;git rebase&lt;/code&gt;. I hope this is useful for you. If you have any question or suggestion please let me know in comments. See you next time! Bye!&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Apr 2016 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/git-rebase</link>
        <guid isPermaLink="true">https://womanonrails.com/git-rebase</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>environment</category>
        
        <category>git</category>
        
        <category>tools</category>
        
      </item>
    
      
      <item>
        <title>Simple usage of Git</title>
        <description>&lt;p&gt;&lt;a href=&quot;/what-is-git&quot;&gt;Last time&lt;/a&gt; we talk about why we like &lt;strong&gt;Git&lt;/strong&gt;. Today I would like to show you how we use Git. I will go thought base commands but if you like more information please use &lt;a href=&quot;https://git-scm.com/documentation&quot;&gt;Git documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Let&amp;#39;s get started!&lt;/h2&gt;

&lt;p&gt;Git is &lt;strong&gt;distributed repository&lt;/strong&gt;. This mean that every one in our team have all history of changes locally. You can commit changes quickly without Internet connection. The most important thing is when something goes wrong in one local machine rest of the team has copy of &lt;strong&gt;repo&lt;/strong&gt; (repository). In case you have central repository, if something is broken in this repository you loose all your changes.&lt;/p&gt;

&lt;p&gt;I will be talking about &lt;strong&gt;command line&lt;/strong&gt; for Git. I think it is easier to understand Git and use command line then some graphic tools.&lt;/p&gt;

&lt;h2&gt;First - setup&lt;/h2&gt;

&lt;p&gt;When we use Git we want to be sure that your changes will be assigned to us. So we set up our user data.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.name &amp;quot;Your Name&amp;quot;
git config --global user.email you_email_address@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also add colors to our command line.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create repository&lt;/h2&gt;

&lt;p&gt;To start using Git in our project, we go to this project through command line and then we initialize Git inside.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will initialize only &lt;strong&gt;local Git repository&lt;/strong&gt;. To put our repo to server you can use tools like &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;https://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;. Ok now, how we can work with Git. Very helpful command will be:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command tell us what was change from last time we use Git. So we have for example ruby file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it is not tracked by Git we can see something like that:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
#
# Initial commit
#
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#   hello_world.rb
#
# nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;First commit&lt;/h2&gt;

&lt;p&gt;Now we must tell Git: &lt;em&gt;please track this file&lt;/em&gt;, so we do.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add hello_world.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After this when we use &lt;code&gt;git status&lt;/code&gt; we see:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
#
# Initial commit
#
# Changes to be commited:
#   (use &amp;quot;git rm --cached  &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#   new file: hello_world.rb
#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can do &lt;strong&gt;commit&lt;/strong&gt;. I can say that commit is like prepare box to send. You put into one box everything which creates one common piece. For our changes we add only one file so our commit will contain a simple file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;Create a hello function&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then Git status shows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
# nothing to commit (working directory clean)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So we change our function:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
# Changed but not updated:
#
#  modified: hello_world.rb
# no changes add to commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we want create new commit we must add new things to your box:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add hello_world.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and create commit&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;Change our hello function&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Push/pull changes to/from remote repository&lt;/h2&gt;

&lt;p&gt;Ok, we know how create commits. Now I would like to show you how we can &lt;strong&gt;push&lt;/strong&gt; our code to server (to &lt;strong&gt;remote repository&lt;/strong&gt;) and how we can download (&lt;strong&gt;pull&lt;/strong&gt;) our repo from server. To do this we will use &lt;strong&gt;GitHub&lt;/strong&gt; but you can use others solutions.&lt;/p&gt;

&lt;p&gt;When we have account on GitHub we create &lt;strong&gt;new repository&lt;/strong&gt; and we need to run in command line something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git remote add origin link_to_or_repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don&amp;#39;t worry, after you create your new repository, GitHub show you all commands. You only need to copy and paste this commands to your command line. In short this command tells local Git: &lt;em&gt;Hey this is my remote repository and its name is origin&lt;/em&gt; (We can say that this is my server for code). When we want to send our code to this remote repository we do:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So we tell to Git: &lt;em&gt;push your code from branch&lt;/em&gt; &lt;code&gt;master&lt;/code&gt; &lt;em&gt;to repository with name&lt;/em&gt; &lt;code&gt;origin&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;What is branch?&lt;/h4&gt;

&lt;p&gt;It is like path. You can have many path in your code (for now we have only one and it&amp;#39;s default name is master). And you can switch between this paths. After this command you will be asking about you GitHub user name and password. When you put this informations to console, your code will be available on GitHub.&lt;/p&gt;

&lt;h2&gt;Last think!&lt;/h2&gt;

&lt;p&gt;When you know that other people do some changes in this repository you can &lt;strong&gt;pull&lt;/strong&gt; this changes locally.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command &lt;strong&gt;pull&lt;/strong&gt; code from remote repository with &lt;code&gt;origin&lt;/code&gt; name to our current branch. Because we have only one branch - &lt;code&gt;master&lt;/code&gt;, all changes will be download to &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;This is end. All you need to know to start working with Git is here. I hope you like it. If you wants know more please let me now in comments. See you next time! Bye!&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Feb 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/git-usage</link>
        <guid isPermaLink="true">https://womanonrails.com/git-usage</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>environment</category>
        
        <category>git</category>
        
        <category>tools</category>
        
      </item>
    
      
      <item>
        <title>Lambdas in Ruby</title>
        <description>&lt;p&gt;I had situation where I worked with many different (but in some way similar) collections in Ruby. This collections had very similar methods to search elements by name. In this particular example I decided to use lambda. Let me show you how this looks like.&lt;/p&gt;

&lt;p&gt;Code which I get looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@first_collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is not bad code but in others places I had similar things. Collections (I mean arrays) and names were only changes. Like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@sedond_collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So I decided to use lambda. I created method which generate lambda for different collections. As an arguments lambda get &lt;code&gt;names&lt;/code&gt; of activities to select. Method looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you prepare collection, you can start looking for activities with specific names.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This solution reduce number of the same structure in our code. There is one place where collection is declared. To be honest with you this was only temporary change because at the end of my refactoring collection became separate object. But for this moment in time solution was very clear and simple.&lt;/p&gt;

&lt;p&gt;If you like to know more about lambda and functional programming, you can read my presentaion availabe &lt;a href=&quot;https://womanonrails.github.io/presentation-functional-programming-in-ruby/#1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope that was interesting for you. Live a comment and see you next time. Bye!&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Feb 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/lambda</link>
        <guid isPermaLink="true">https://womanonrails.com/lambda</guid>
        
        <category>Ruby</category>
        
        <category>refactoring</category>
        
        
        <category>Ruby</category>
        
        <category>refactoring</category>
        
      </item>
    
      
      <item>
        <title>Global Game Jam</title>
        <description>&lt;p&gt;&lt;br&gt;
Date: &lt;em&gt;2016-01-29 17:00 – 2016-01-31 19:00&lt;/em&gt;&lt;br&gt;
Place: &lt;em&gt;Cieszyn, PL&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I really love doing things connecting in technology. This time I was participant in &lt;a href=&quot;https://globalgamejam.org/&quot;&gt;Global Game Jam&lt;/a&gt; in Cieszyn. This was my third time. &lt;strong&gt;What is Global Game Jam?&lt;/strong&gt; This is 48 hours hackaton for people which would like to create games. And each year I&amp;#39;m impressed of ideas, talent and projects realization. You can see more &lt;a href=&quot;https://www.youtube.com/watch?v=-g4BbTNCgck&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Jan 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/global-game-jam</link>
        <guid isPermaLink="true">https://womanonrails.com/global-game-jam</guid>
        
        <category>GGJ</category>
        
        <category>Cieszyn</category>
        
        
        <category>events</category>
        
        <category>travels</category>
        
        <category>workshops</category>
        
      </item>
    
  </channel>
</rss>
