<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Woman on Rails</title>
    <description></description>
    <link>https://womanonrails.com/pl/</link>
    <atom:link href="https://womanonrails.com/pl/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 05 Sep 2018 10:22:02 -0400</pubDate>
    <lastBuildDate>Wed, 05 Sep 2018 10:22:02 -0400</lastBuildDate>
    <generator>Jekyll v3.4.2</generator>
    
      
      <item>
        <title>Wroclove.rb 2018 - Krótkie podsumowanie</title>
        <description>&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Ostatni raz uczestniczyłam w konferencji &lt;strong&gt;Wroclove.rb&lt;/strong&gt; około 2-3 lata temu. Było to wtedy dla mnie dość smutne doświadczenie. Prawie każda prezentacja mówiła o tym, co jest nie tak z &lt;strong&gt;Ruby&lt;/strong&gt; i &lt;strong&gt;Ruby on Rails&lt;/strong&gt;. Niestety wtedy nikt nie pokazywał rozwiązań dla postawionych problemów. Wiem, że te prezentacje miały być dla nas takim dzwonkiem alarmowym. Miały nam powiedzieć: &lt;em&gt;&amp;quot;Obudźcie się i zacznijcie działać!&amp;quot;&lt;/em&gt; Jednak wróciłam do domu po tamtej edycji dość przygnębiona.&lt;/p&gt;

&lt;p&gt;Tym razem było inaczej. Ludzie przyjechali z pomysłami, co możemy zrobić dalej. Jak możemy poprawić nasz kod pod względem architektury, tak by nawet duże projekty nie były problematyczne. Miło było posłuchać o nowych koncepcjach (przynajmniej dla świata Rails, bo języki takie jak Java czy C# już od jakiegoś czasu używają tych koncepcji). Nie mówię tutaj, że proponowane rozwiązania są idealne, ale dobrze jest zobaczyć zmianę w naszej społeczności. Poczuć pozytywną energię i zobaczyć tą chęć do działania.&lt;/p&gt;

&lt;p&gt;Przyjazd na Wroclove.rb był dla mnie miłym doświadczeniem pod jeszcze jednym względem. Cudownie było spotkać wszystkich moich starych znajomych, których tak rzadko widuje na co dzień. Konferencje takie, jak ta bardzo to ułatwiają. Poczułam się jakbym przyjechała na zjazd rodzinny. I za to chciałabym podziękować organizatorom.&lt;/p&gt;

&lt;p&gt;Jeżeli byłeś lub byłaś na konferencji, to zapraszam do obejrzenia mojego krótkiego filmu z tego wydarzenia. A jeżeli nie, mam nadzieję, że zainspiruje Cię on do dołączenia do nas w następnym roku. Zapraszam Cię również do dzielenia się swoimi przemyśleniami w komentarzach poniżej. Do zobaczenia następnym razem. Obiecuje, że już niedługo na blogu pojawi się bardziej techniczny temat.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 May 2018 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/pl/wrocloverb-2018</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/wrocloverb-2018</guid>
        
        <category>Wrocloverb</category>
        
        <category>Wrocław</category>
        
        
        <category>podróże</category>
        
        <category>warsztaty</category>
        
        <category>wydarzenia</category>
        
      </item>
    
      
      <item>
        <title>Rozmowa kwalifikacyjna</title>
        <description>&lt;p&gt;Od jakiegoś czasu zajmuję się rozmowami kwalifikacyjnymi. Nie jestem osobą z HR. Jestem programistką. Moje zadanie, to sprawdzenie technicznych umiejętności kandydatów aplikujących do naszej firmy. Staram się dowiedzieć czy kandydatka lub kandydat pasuje do naszego zespołu technicznie, ale również pod względem osobowości i temperamentu. Podczas takiej rozmowy nie chodzi o bycie doskonałym. Raczej o bycie szczerym, bycie sobą. Celem jest sprawdzenie czy obie strony chcą podjąć współpracę. Zarówno kandydat jak i zespół powinni do siebie pasować. Dzisiaj chciałabym się podzielić z Wami elementami, na które ja zwracam uwagę podczas prowadzenia rozmowy kwalifikacyjnej.&lt;/p&gt;

&lt;p&gt;Najważniejszy jest dla mnie szacunek. Ponieważ szanuję czas innych ludzi, również tych, z którymi przeprowadzam rozmowę kwalifikacyjną, więc przygotowuje się do takiej rozmowy dobrze. Przeglądam CV, czytam o projektach, w których osoba brała udział, staram się wyodrębnić mocne strony kandydata. Na tej podstawie powstają pierwsze pytania. Tak, do każdej rozmowy przygotowuję osobny zastaw pytań. Część z nich jest podobna, ale cała reszta uwarunkowana jest doświadczeniem i wiedzą danej osoby. Poświęcam swój czas, by nie marnować czasu innych. Tego też oczekuję od drugiej strony. Oczekuje przede wszystkim &lt;strong&gt;przygotowania&lt;/strong&gt; do rozmowy. Nie chodzi mi tutaj o umiejętność odpowiedzenia na wszystkie pytania prawidłowo. Zależy mi na ciekawej konwersacji dwóch osób z tej samej branży. Na wymianie poglądów, sprawdzeniu znajomości wybranej technologii, umiejętność logicznego myślenia, komunikatywności. Oczywiście czegoś innego będę oczekiwać od osoby początkującej, a czegoś innego od osoby doświadczonej.&lt;/p&gt;

&lt;p&gt;Tak jak już powiedziałam. Najważniejsze dla mnie jest &lt;strong&gt;bycie przygotowanym&lt;/strong&gt; do rozmowy. To jest klucz do sukcesu. Czasami jest tak, że ktoś jest naprawdę interesującym kandydatem. Oczywiście w dobrym znaczeniu. Ale z różnych względów nie jest osobą, której teraz poszukujemy. Nie ta technologia, nie ten poziom doświadczenia. Takie osoby się zapamiętuje i jeżeli tylko nadarza się okazja w przyszłości do podjęcia współpracy, to ją wykorzystujemy.&lt;/p&gt;

&lt;p&gt;Co to więc znaczy &lt;strong&gt;być dobrze przygotowanym&lt;/strong&gt;. Co trzeba zrobić by &lt;strong&gt;dobrze przygotować&lt;/strong&gt; się do rozmowy?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Znajomość własnego CV&lt;/p&gt;

&lt;p&gt;Kiedy zaczynam swoje przygotowania zawsze czytam CV. To jest taki mój punkt startowy. Pytam o projekty, technologie, architekturę, wykorzystane rozwiązania. Wszystko co zostało wymienione w CV jest dla mnie informacją o kandydacie. Daty, projekty, przybliżony czas pracy w jednej firmie, dodatkowe umiejętności, szkolenia. Dlatego znajomość tego, co się podało w CV jest ważna. Jeżeli jesteś przed rozmową kwalifikacyjną, to przejrzyj swoje CV, zastanów się i przypomnij sobie ważne informacje z nim związane. Jakie były Twoje obowiązki w projekcie? Jakie technologie były tam wykorzystane? Jak rozwiązaliście problemy, które pojawiły się po drodze? Czytanie swojego CV na rozmowie nie robi dobrego wrażenia, tak samo jak sytuacja, w której mówisz, że nie pamiętasz, co robiłeś w ostatnim projekcie. Oczywiście jest to normalne, że coś co było 5 lat temu zaciera się w pamięci. Jednak jak już idziemy na tą rozmowę, to warto przypomnieć sobie te 2 - 3 ostatnie projekty. Chciałabym tu zaznaczyć też jeszcze jedną rzecz. Wpisywanie do CV umiejętności lub technologii, o których nie mamy pojęcia, to bardzo zły pomysł. Takie rzeczy można łatwo sprawdzić, trudniej jest natomiast poprawić to kiepskie, pierwsze wrażenie.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Znajomość projektów i firmy&lt;/p&gt;

&lt;p&gt;W zasadzie jest to część punktu pierwszego. Jednak chciałam to jeszcze bardziej zaznaczyć. Kto powinien znać projekty, nad którymi pracował lepiej niż Ty sam? Ja naprawdę o to pytam! O zakres obowiązków w projekcie, o architekturę i o wiele, wiele więcej. Jeżeli nie chcesz lub nie możesz o czymś mówić, to może lepiej nie umieszczać tego w CV? Zdaję sobie sprawę, że pewne elementy są objęte klauzulą poufności. Ale to Ty powinieneś przed rozmową sprawdzić, jakie informacje możesz ujawnić a jakich nie. Oto przykład jak mogą wyglądać moje pytania: Jeżeli w CV jest projekt oparty na mikroserwisach, to pewnie zapytam o wygląd tej architektury, sposób komunikacji między serwisami, o twoje zdanie na temat tego podejścia, wady, zalety, oto jak Ty rozumiesz mikroserwisy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Co nowego w twojej technologii&lt;/p&gt;

&lt;p&gt;Bycie na bieżąco, to nie tylko kwestia rozmowy kwalifikacyjnej. Praca w IT, to moim zdaniem ciągły rozwój, nie można się zatrzymać i przestać rozwijać. Każdy powinien wiedzieć, co nowego słychać w jego dziedzinie. Zdaje sobie sprawę, że nie da się wiedzieć wszystkiego. Ja sama czasem tego nie ogarniam. Warto natomiast próbować raz na jakiś czas odświeżyć swoją wiedzę. Na rozmowie pewnie zapytam o najnowszą wersje języka, o nowości w nim pojawiające się, nowe biblioteki z jakimi miałaś/miałeś styczność, nowe podejścia lub koncepcje. Te pytania mają na celu sprawdzić, czy dbasz o swój rozwój. Nie chodzi o to by wiedzieć wszystko. Jeżeli czegoś nie znasz bądź szczera/szczery.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Narzędzia, sposób pracy, używane aplikacje&lt;/p&gt;

&lt;p&gt;Zawsze pytam o takie rzeczy. W jaki sposób pracujesz? Jakiego edytora używasz? Jakiego systemu używasz? O narzędzia do kontroli wersji? Jakie biblioteki, gemy? Wszystko co jest związane ze stylem/sposobem pracy. Jak być efektywnym, dobrze się komunikować, jak dbać o jakość kodu. Może wiesz coś o TDD, metrykach, PR/MR (pull/merge request), standardzie kodu, pracy zdalnej. Interesują mnie też Twoje opinie na te tematy. Pytam o to wszystko, ponieważ chcę wiedzieć jak świadomym programistą jesteś. Czy wiesz, że te wszystkie elementy składają się na Twoją efektywność i dobry ich dobór może polepszyć komfort Twojej pracy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Architektura&lt;/p&gt;

&lt;p&gt;Co robisz by projekt był dobrze zorganizowany pod względem architektury? Jakości kodu? Jak pisać kod tak, by był łatwy i szybki w rozwijaniu? Wzorce projektowe? Zasady programowania obiektowego/funkcyjnego? Standardy w kodzie? Założenia języka?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Informacje o firmie&lt;/p&gt;

&lt;p&gt;To jest bardziej istotne dla Ciebie jako kandydata. Zdobycie jak najwięcej informacji na temat firmy, do której chcesz się zatrudnić. Czym się firma zajmuje? Jakie są produkty firmy? Na jakim rynku działa? Jak wygląda struktura firmy? Czasami podczas rozmowy zadaje pytanie odnośnie wiedzy o firmie, ale raczej rzadko. To bardziej Ciebie powinno interesować czy wizja i cele firmy są zgodne z Twoim światopoglądem. Czy to co robi firma Cię interesuje? Są to informacje, które warto wiedzieć przed wysłaniem CV. Zaoszczędzi to czas Tobie i innym.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bądź przygotowany na pokazanie kodu&lt;/p&gt;

&lt;p&gt;Na krótkiej rozmowie trudno zadać wszystkie pytania i sprawdzić całą wiedzę. Zwłaszcza związaną z pisaniem kodu. Dlatego zawsze proszę o dostęp do projektów, które mogą zaprezentować kompetencje dotyczące pisania kodu. O coś co wykracza poza umiejętność uruchomienia komendy scaffold w Rails. Coś z czego jesteś dumny.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bądź gotowy na kodowanie na żywo&lt;/p&gt;

&lt;p&gt;Wiem to dość stresująca sytuacja. Zwłaszcza gdy inna osoba praktycznie patrzy Ci na ręce. Dla mnie jest to jeden z lepszych sposobów sprawdzenia jakim programistą jesteś. W jaki sposób rozwiązujesz problemy, jak działa na Ciebie stres, w jaki sposób myślisz, jak wyglądają Twoje umiejętności komunikacyjne. W takim momencie nie myśl o tym, że ja tu jestem, po prostu mów co robisz, jak myślisz o problemie, pytaj jak coś jest nie jasne i będzie dobrze.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metodologie&lt;/p&gt;

&lt;p&gt;Jeżeli pracowałaś lub pracowałeś już przy tworzeniu jakiegoś projektu, to na pewno wiesz coś na ten temat. Zastanów się jak pracujesz w zespole? Jaki duży jest zespół? W jaki sposób organizujesz sobie pracę? Czy towarzyszą temu jakieś procesy? Jak one się nazywają? Agile, Scrum, Waterfall, Lean? Czego używasz do komunikacji? Jak tworzysz nowe funkcjonalności? Jak naprawiasz błędy? W jaki sposób podchodzisz do klientów? Jak rozwiązujesz problemy? Co możesz powiedzieć o swoim procesie? Wady, zalety?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pytania do mnie&lt;/p&gt;

&lt;p&gt;Jest naprawdę dużo rzeczy, o które możesz mnie zapytać. Może o to w jaki sposób pracuje nasz zespół. Nad czym teraz pracujemy. O naszą jakość kodu, architekturę. Zawsze jestem chętna by rozwiać wszelkie wątpliwości, opowiedzieć o zespole czy projekcie. Nie ma nic lepszego niż osoba, która we czego chce i nie boi się o to zapytać. W końcu Tobie też projekt i zespół powinien odpowiadać.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Na koniec bardzo ważna sprawa. To co tutaj napisałam to sprawy, na które ja zwracam uwagę. Czego oczekuje na rozmowie kwalifikacyjnej od kandydata. To nie jest sposób na oszukanie osoby rekrutującej, lecz na lepsze przygotowanie do rozmowy. Bądź szczery ze sobą i ze swoim rozmówcą. Przecież chodzi o to, by się wzajem poznać i sprawdzić czy będzie się Wam dobrze pracowało. Pamiętaj nie tylko firma wybiera swojego pracownika, ale też pracownik firmę. Każda strona powinna być zadowolona z dokonanego wyboru.&lt;/p&gt;

&lt;p&gt;To już wszystko na dziś. Znasz inne sposoby by być dobrze przygotowanym do rozmowy kwalifikacyjnej? Jeżeli tak, podziel się nimi w komentarzach. Miłego dnia i do następnego razu!&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Apr 2017 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/pl/interview</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/interview</guid>
        
        <category>interview</category>
        
        <category>umiejętności</category>
        
        
        <category>rozmowa kwalifikacyjna</category>
        
        <category>umiejętności</category>
        
      </item>
    
      
      <item>
        <title>Sublime Text - edytor tekstowy</title>
        <description>&lt;p&gt;Myślę, że prawie każdy programista ma swój ulubiony edytor tekstowy. Jedni lubią edytory takie jak &lt;a href=&quot;https://en.wikipedia.org/wiki/Vim_(text_editor)&quot;&gt;Vim&lt;/a&gt;, inni jak &lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;Notepad++&lt;/a&gt; a ja uwielbiam &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;. Posiada on wiele skrótów klawiszowych, dodatków czy snippetów ułatwiających pracę z kodem lub ze zwykłym tekstem. Oto moim zadaniem najważniejsze zalety Sublime:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Możesz jednocześnie przeglądać 4 pliki w tym samym czasie.&lt;/p&gt;

&lt;p&gt;Sublime ma możliwość podzielenia okna programu na kilka części. Maksymalnie cztery. Chyba, że używasz dodatku &lt;a href=&quot;https://github.com/SublimeText/Origami&quot;&gt;Origami&lt;/a&gt;. Pozwala on dzielić okno programu na dowolną ilość paneli. W podstawowej wersji Sublime można wybierać pomiędzy kilkoma dostępnymi typami paneli. Można je zaleźć w &lt;code&gt;View -&amp;gt; Layout&lt;/code&gt;. Są tam też dostępne skróty klawiszowe do zarządzania tymi panelami. Ja osobiście lubię mieć otwarte dwa panele równocześnie. To bardzo ułatwia mi pracę w &lt;strong&gt;TDD&lt;/strong&gt;. Dzięki temu cały czas mam widoczny kod i testy nad którymi pracuję.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wszystko jest konfigurowalne&lt;/p&gt;

&lt;p&gt;Wystarczy tylko wejść do &lt;code&gt;Preferences -&amp;gt; Settings&lt;/code&gt;. Są tam zapisane wszystkie ustawienia. Kolory, zachowania, skróty, ustawienia języków. Dosłownie wszystko. Polecam też przyjrzeć się innym opcjom dostępnym w zakładce menu &lt;code&gt;Preferences&lt;/code&gt;. A zwłaszcza &lt;code&gt;Packages&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dodatki&lt;/p&gt;

&lt;p&gt;Jeżeli tylko chcesz rozszerzyć funkcjonalność Sublime to możesz przebierać w różnych dodatkach. Tutaj moje ulubione:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://emmet.io/&quot;&gt;Emmet&lt;/a&gt; - do szybkiego i łatwego tworzenia kodu HTML lub CSS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facelessuser/BracketHighlighter&quot;&gt;BracketHighlighter&lt;/a&gt; - podświetla otwarcie i zamknięcie konkretnego zagłębienia nawiasów, bardzo przydatny zwłaszcza przy pracy z językami takimi jak JavaScript, gdzie tych nawiasów jest sporo&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jisaacks/GitGutter&quot;&gt;Git Gutter&lt;/a&gt; - pokazuje zmiany jakie zaszły w kodzie (jest zintegrowany z narzędziem o nazwie &lt;strong&gt;git&lt;/strong&gt;, pisałam o nim w artykule &lt;a href=&quot;/pl/what-is-git&quot;&gt;Co to jest git?&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dzhibas/SublimePrettyJson&quot;&gt;SublimePrettyJson&lt;/a&gt; - pozwala za pomocą kombinacji klawiszy w czytelny sposób sformatować plik zawierający dane w formacie JSON&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pderichs/sublime_rubocop&quot;&gt;RuboCop&lt;/a&gt; - pokazuje dobre praktyki pisania kodu w języku Ruby&lt;/li&gt;
&lt;li&gt;Linters (Coffee Script, CSS, Sass, JS) - narzędzia, które pokazują dobre praktyki pisania kodu w różnych językach w zależności od wybranego lintera&lt;/li&gt;
&lt;li&gt;Colorfull syntaxt - kolorowanie składni języka, jeżeli tylko brakuje Ci składni jakiegoś języka programowania zawsze można taką funkcjonalność doinstalować&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Zachęcam do samodzielnego poszukania innych dodatków.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Skróty, skróty skróty klawiszowe&lt;/p&gt;

&lt;p&gt;Jak mam być szczera uwielbiam skróty klawiszowe. To jest też główny powód, dla którego robię ten artykuł. Jak tylko jest to możliwe, to pracuje wyłącznie z klawiaturą. Dzięki temu oszczędzam czas. Sublime oferuje nam niezliczony zasób takich właśnie skrótów. Te z których korzystam na co dzień zamieściłam poniżej:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + b&lt;/code&gt; - włącza/wyłącza pasek boczny (z projektami)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + 0&lt;/code&gt; - przechodzi do paska bocznego, gdzie znajdują się katalogi z projektami (wtedy za pomocą strzałek można poruszać się pomiędzy plikami i katalogami, naciskając &lt;code&gt;enter ↩&lt;/code&gt; otwieramy plik w oknie głównym i przenosimy tam kursor)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + 1,2,3,4&lt;/code&gt; - przenosi kursor pomiędzy panelami wewnątrz okna głównego (w zależności od wybranej ilości paneli)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ←, →&lt;/code&gt; - przechodzi do początku/końca słowa&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + ←, →&lt;/code&gt; - zaznacza poprzednie/następne słowo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + m&lt;/code&gt; - przeskakuje pomiędzy początkiem a końcem nawiasów w bieżącym fragmencie kodu&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + m&lt;/code&gt; - zaznacza całe wnętrze nawiasu lub cudzysłowu&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + PgUp, PgDn&lt;/code&gt; - przechodzi do poprzedniej/następnej zakładki/pliku&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + tab&lt;/code&gt; - przechodzi do następnej używanej zakładki/pliku w jednym panelu/grupie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + tab&lt;/code&gt; - przechodzi do poprzedniej używanej zakładki/pliku w jednym panelu/grupie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ↑, ↓&lt;/code&gt; -  przesuwa bieżący plik do góry/na dół (jak przy poruszaniu za pomocą scrolla w myszce)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + ↑, ↓&lt;/code&gt; - zamienia kolejnością sąsiadujące linie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;crtl + /&lt;/code&gt; - zakomentowuje/odkomentowuje linie kodu (w zależności od wybranego języka programowania)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + delete&lt;/code&gt; - usuwa wszystkie znaki znajdujące się po kursorze (bez przechowywania tego w schowku)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + backspace&lt;/code&gt; - usuwa wszystkie znaki przed kursorem (bez przechowywania w schowku)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + k&lt;/code&gt; - usuwa wszystkie znaki znajdujące się po kursorze (bez przechowywania tego w schowku)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + k&lt;/code&gt; - usuwa całą linię bez przechowywania wartości w schowku&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ↩&lt;/code&gt; - dodaje dodatkową linię za kursorem&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + ↩&lt;/code&gt; - dodaje dodatkową linię przed kursorem&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + j&lt;/code&gt; - dołącza linię poniżej do końca bieżącej linii&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + alt + j&lt;/code&gt; - pokazuje w czytelny sposób pliki w formacie JSON, możliwość korzystania z tego skrótu dzięki dodatkowi SublimePrettyJson&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ]&lt;/code&gt; - dodaje wcięcie do zaznaczonych linii&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + [&lt;/code&gt; - usuwa wcięcie dla zaznaczonych linii&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + a&lt;/code&gt; - zaznacza cały plik&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + l&lt;/code&gt; - zaznacza całą linię&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + d&lt;/code&gt; - zaznacza słowo (powtarzanie tego skrótu pozwala na zaznaczanie kolejnych tych samych słów w pliku i pozwala na zmianę wielu miejsc w tym samym momencie)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + d&lt;/code&gt; - duplikuje linię&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + u&lt;/code&gt; - zapisuje zaznaczony tekst dużymi literami&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + k + l&lt;/code&gt; - zapisuje zaznaczony tekst małymi literami&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + c&lt;/code&gt; - kopiuje zaznaczony tekst do schowka, jeżeli nie było zaznaczonego tekstu kopiuje całą linię, w której znajdował się kursor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + v&lt;/code&gt; - wkleja wybrany tekst lub całą linię ze schowka&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + x&lt;/code&gt; - wycina zaznaczony tekst lub całą linię do schowka&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + g&lt;/code&gt; - pozwala na przejście do linii o wybranym numerze&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + ;&lt;/code&gt; - pozwala na przejście do wybranego w bieżącym pliku słowa&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + r&lt;/code&gt; - wyszukuje wybranego symbolu (funkcji, metody, klasy) w pliku&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + r&lt;/code&gt; - wyszykuje wybranego symbolu (funkcji, metody, klasy) w całym projekcie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + t&lt;/code&gt; - zamienia miejscami dwie sąsiednie litery&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + t&lt;/code&gt; - otwiera ostatni zamknięty plik/tab (tak jak w przeglądarce)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + h&lt;/code&gt; - zamienia jedną frazę na drugą w bieżącym pliku&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + f&lt;/code&gt; - przeszukuje plik&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + f&lt;/code&gt; - przeszukuje cały projekt/folder, można też zamienić frazę na inną w całym projekcie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + q&lt;/code&gt; - całkowicie zamyka Sublime&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + w&lt;/code&gt; - zamyka bieżący plik/zakładkę&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + w&lt;/code&gt; - zamyka bieżące okno&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + n&lt;/code&gt; - otwiera nową zakładkę/plik&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + n&lt;/code&gt; - otwiera nowe okno&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + s&lt;/code&gt; -  zapisuje plik&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + s&lt;/code&gt; - zapisuje plik z możliwością zmiany nazwy&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + o&lt;/code&gt; - otwiera plik&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + o&lt;/code&gt; - otwiera folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + p&lt;/code&gt; - pozwala na szybkie wyszukanie i otwarcie pliku w projekcie (można wyszukiwać po pierwszych literach każdego członu nazwy przykładowo wpisując &lt;code&gt;mnf&lt;/code&gt; można znaleźć plik &lt;code&gt;my_new_file.txt&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + p&lt;/code&gt; - linia poleceń do instalowania nowych dodatków i pakietów&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + z&lt;/code&gt; - cofa zmiany&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + shift + z&lt;/code&gt; - przywraca ostatnie zmiany&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl + y&lt;/code&gt; - wykonuje ostatnią akcję jeszcze raz&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f6&lt;/code&gt; - sprawdza pisownie w języku, który ma się ustawiony (w moim przypadku jest to angielski)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f9&lt;/code&gt; - ustawia w kolejności alfabetycznej zaznaczone linie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f3&lt;/code&gt; - następna wyszukiwana fraza&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f3 + shift&lt;/code&gt; - poprzednia wyszukiwana fraza&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mam nadzieje, że będzie to dla Was pomocne. Do zobaczenia następnym razem!&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Feb 2017 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/pl/sublime</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/sublime</guid>
        
        <category>tools</category>
        
        <category>sublime</category>
        
        
        <category>narzędzia</category>
        
        <category>sublime</category>
        
      </item>
    
      
      <item>
        <title>Zastosowanie metody each_with_object w Ruby</title>
        <description>&lt;p&gt;Ostatnio pracowałam z metodą &lt;code&gt;each_with_object&lt;/code&gt;. Jak zazwyczaj w takich sytuacjach zawsze staram się przed użyciem jakiejś metody sprawdzić jej dokumentację. Weszłam więc na &lt;a href=&quot;https://apidock.com/ruby/v1_9_2_180/Enumerable/each_with_object&quot;&gt;APIdock&lt;/a&gt; przeglądam zastosowanie oraz przykłady. Okazało się że nie było tam jednego z przypadków zastosowania. Chciałam go dodać, lecz bez powodzenia. Postanowiłam więc, że skoro czekam na rozwiązanie problemu ze strony APIdock mogę napisać krótką notatkę na temat metody &lt;code&gt;each_with_object&lt;/code&gt; tutaj.&lt;/p&gt;

&lt;p&gt;Najbardziej pożytecznym i wydaje mi się również popularnym użyciem tej metody jest podanie jako argumentu tablicy lub hasha (tablicy słownikowej). Można to zrobić przykładowo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[:foo, :bar, :jazz].each_with_object({}) do |item, hash|
  hash[item] = item.to_s.upcase
end
 =&amp;gt; {:foo=&amp;gt;&amp;quot;FOO&amp;quot;, :bar=&amp;gt;&amp;quot;BAR&amp;quot;, :jazz=&amp;gt;&amp;quot;JAZZ&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lub&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).each_with_object([]) do |item, array|
  array &amp;lt;&amp;lt; item ** 2
end
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wiem te przykłady są trywialne, ale chodzi o to by zrozumieć samą konstrukcję użycia. Dzięki tej metodzie nie musimy deklarować tablicy przed pętlą:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array = []
(1..10).each do |item|
  array &amp;lt;&amp;lt; item ** 2
end
array
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oczywiście dla tego przykładu można by to zrobić z użyciem metody &lt;code&gt;map&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).map { |item| item ** 2 }
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Innym ciekawym zastosowaniem &lt;code&gt;each_with_object&lt;/code&gt; jest zliczanie częstotliwości występowania:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;one&amp;#39;, &amp;#39;one&amp;#39;].each_with_object(Hash.new(0)) do |item, hash|
  hash[item] += 1
end
 =&amp;gt; {&amp;quot;one&amp;quot;=&amp;gt;3, &amp;quot;two&amp;quot;=&amp;gt;1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;W tym przypadku ustawiamy domyślną wartość dla tablicy słownikowej na &lt;code&gt;0&lt;/code&gt;. Dzięki temu zliczanie ilości wystąpień elementów w tablicy jest szybkie i proste. Nie potrzebujemy warunku &lt;code&gt;if&lt;/code&gt; by zabezpieczyć się przed nieoczekiwaną wartością &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if hash[item]
  hash[item] += 1
else
  hash[item] = 0
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Uwaga&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;W metodzie &lt;code&gt;each_with_object&lt;/code&gt; nie można użyć niemutowalnych (inmutable) obiektów jak liczby. Przykład poniżej nie zwróci Wam 55 tylko 0.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).each_with_object(0) do |item, sum|
  sum += item
end
 =&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Możemy to zrobić też inaczej:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).reduce(:+)
 =&amp;gt; 55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lub&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).inject(:+)
 =&amp;gt; 55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lub w Ruby on Rails:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).sum
 =&amp;gt; 55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Przy okazji czy wiecie jaka jest różnica między metodą &lt;code&gt;reduce&lt;/code&gt; a &lt;code&gt;inject&lt;/code&gt;? Nie ma różnicy. Te dwie metody to tak naprawdę jedna i ta sama metoda, ale mająca dwie nazwy tzw. &lt;a href=&quot;http://ruby-doc.org/core-2.4.0/Enumerable.html#method-i-inject&quot;&gt;alias&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W tym momencie powinniśmy jeszcze wspomnieć o jednej rzeczy. Metodę &lt;code&gt;inject&lt;/code&gt; możemy stosować też bardzo podobnie do &lt;code&gt;each_with_object&lt;/code&gt;. Różnica jest w kolejności argumentów w bloku i tym że w ostatniej linii bloku dla metody &lt;code&gt;inject&lt;/code&gt; zawsze musimy zwrócić naszą wartość agregującą (przykładowo sumującą). Popatrzcie tutaj:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(1..10).inject([]) do |array, item|
  array &amp;lt;&amp;lt; item ** 2
end
 =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lub&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[:foo, :bar, :jazz].inject({}) do |hash, item|
  hash[item] = item.to_s.upcase
  hash
end
 =&amp;gt; {:foo=&amp;gt;&amp;quot;FOO&amp;quot;, :bar=&amp;gt;&amp;quot;BAR&amp;quot;, :jazz=&amp;gt;&amp;quot;JAZZ&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Uwaga&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kiedy używamy &lt;code&gt;array &amp;lt;&amp;lt; item ** 2&lt;/code&gt; zawsze zostaje tu zwrócona cała tablica, ale dla przykładu drugiego &lt;code&gt;hash[item] = item.to_s.upcase&lt;/code&gt; zwraca &lt;code&gt;item.to_s.upcase&lt;/code&gt; a nie &lt;code&gt;hash&lt;/code&gt; więc musimy pamiętać by w ostatniej linii bloku zawsze zwrócić &lt;code&gt;hash&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A teraz brakujący przypadek. Metodę &lt;code&gt;each_with_object&lt;/code&gt; można nie tylko używać na tablicy czy enumeratorze ale również na hashu (tablicy słownikowej). Taki przypadek wygląda troszkę inaczej. Zobaczcie sami:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{ foo: 1, bar: 2, jazz: 3 }.each_with_object({}) do |(key, value), hash|
  hash[key] = value**2
end
 =&amp;gt; {:foo=&amp;gt;1, :bar=&amp;gt;4, :jazz=&amp;gt;9}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lub&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{ foo: 1, bar: 2, jazz: 3 }.each_with_object([]) do |(key, value), array|
  array &amp;lt;&amp;lt; { id: value, name: key }
end
 =&amp;gt; [{:id=&amp;gt;1, :name=&amp;gt;:foo}, {:id=&amp;gt;2, :name=&amp;gt;:bar}, {:id=&amp;gt;3, :name=&amp;gt;:jazz}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To był krótki przegląd tego co można zrobić z metodą &lt;code&gt;each_with_object&lt;/code&gt;. Mam nadzieje, że zastosowanie tej metody podoba się Wam tak samo jak mnie. Jeżeli macie jakieś pytania zostawcie je poniżej w komentarzach. Do zobaczenia następnym razem!&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jan 2017 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/pl/each-with-object</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/each-with-object</guid>
        
        <category>Ruby</category>
        
        <category>tips</category>
        
        
        <category>Ruby</category>
        
        <category>tips</category>
        
      </item>
    
      
      <item>
        <title>Web Summit - Lizbona 2016</title>
        <description>&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Zajęło mi trochę czasu od ostatniego postu. Tak wiele się wydarzyło: eventy, warsztaty, podróże. Na szczęście jestem z powrotem! Dzisiaj chciałabym się podzielić w Wami moimi spostrzeżeniami dotyczącymi wydarzenia &lt;a href=&quot;https://websummit.net/&quot;&gt;Web Summit&lt;/a&gt;. Jest to ogromna konferencja (a w zasadzie wystawa/targi nowych pomysłów). Kilka lat temu miałam przyjemność uczestniczyć w tej konferencji w &lt;a href=&quot;/pl/websummit&quot;&gt;Dublinie&lt;/a&gt;. Tym razem Web Summit odbywał się w Lizbonie. Zdecydowałam się przyjechać ze względu na darmowy bilet, który dostałam jako kobieta w IT. Może właśnie z tego powodu nie powinnam mówić o tym, co mi się nie podobało. Choć jak się tak nad tym dłużej zastanowić, to w jaki sposób można coś poprawić, jeżeli nie wie się, co było nie tak?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Za duża konferencja dla mnie&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;W środowisku Ruby środowisku mamy takie powiedzenie: &lt;em&gt;Jeżeli chcesz zrobić dużą aplikację, po prostu jej nie rób&lt;/em&gt;. Myślę, że to samo dotyczy konferencji. Stanowczo ta konferencja była za duża. Za dużo osób czekających na metro. Za dużo osób czekających na wejście na teren konferencji. Za dużo osób w kolejce po jedzenie, oglądających prezentacje, oglądających starupy, idących do toalety itd.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Czy ja mam znaczenie?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Na Web Summit w Lizbonie było tak dużo uczestników, że człowiek zaczyna się zastanawiać, czy jest istotny podczas tej konferencji. Jestem pewna, że nikt nie zauważył by mojej nieobecności. Wszystko mogło by się odbyć beze mnie. Więc pojawia się pytanie: Czy moja obecność jest istotna? Czy liczy się moja opinia, moje zdanie, mój komfort? Czy jestem tylko kolejną osobą na tym ogromnym wydarzeniu?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Czy to jest miejsce dla programistki?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jestem programistą i przyjechałam na Web Summit, by nauczyć się czegoś nowego. Nie posiadam swojego startupu, nie jestem osobą biznesu. Jestem tylko programistką. Z mojej perspektywy na miejscu było dużo ciekawych prezentacji czy paneli dyskusyjnych. Problem w tym, że w przeciągu 20 minut nie da się głęboko wejść w temat. Można, co najwyżej kogoś tematem zainteresować. Było to dla mnie rozczarowujące. Więcej czasu spędziłam rozmawiając z ludźmi przy stanowiskach startupowych, niż na oglądaniu prezentacji. Dzięki tym rozmowom dowiedziałam się więcej ciekawych i technicznych rzeczy, niż oglądając prezentacje. Nie zrozumcie mnie źle, na prawdę można było znaleźć interesujące prezentacje, ale z perspektywy programistki były za mało techniczne. Dla mnie Web Summit, to takie ogromne targi nowych pomysłów a nie konferencja. Bardziej miejsce dla biznesu niż dla programistów.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Z perspektywy kobiety&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jestem bardzo wdzięczna, za możliwość wzięcia udziału w Web Summit. Widać było, że organizatorom zależy, by sprowadzić na to wydarzenie jak najwięcej kobiet z branży IT. Bardzo się ciesze, że organizatorzy widzą problem małej ilości kobiet w tym środowisku, starają się jakoś mu zaradzić. Ale myślę że nie tędy droga. Prosty przykład. Nawet jeżeli dostałam koszulkę w rozmiarze S w wersji męskiej, to jest ona na tyle duża, że mogę w niej co najwyżej spać. Druga sprawa, to osobna strefa dla kobiet z biletami &lt;em&gt;Women in Tech&lt;/em&gt;. Było to dla mnie kompletne nieporozumienie. Dlaczego mogły tam wejść tylko kobiety z biletami Women in Tech? Dlaczego pozostałe kobiety nie miały takiej możliwości? Dlaczego mężczyźni, którzy wspierają kobiety w IT, też nie mogli tam przebywać? Znam naprawdę niesamowitych mężczyzn, którzy wspierają zarówno mnie jak i inne kobiety w tej branży. Myślę, że zasłużyli na szacunek i proste dziękuje za to co robią. Jako kobieta nie potrzebują specjalnego traktowania w IT. Chce być traktowane tak samo poważnie i z takim samym szacunkiem jak mężczyźni. A ta strefa dla kobiet wyglądała dla mnie bardziej jak zoo czy akwarium, niż przestrzeń gdzie mogę się czuć bezpiecznie i trochę się zrelaksować. By zmienić wizerunek kobiety w IT nie możemy siedzieć w osobnej przestrzeni, &lt;strong&gt;musimy&lt;/strong&gt; wychodzić do ludzi i swoim przykładem pokazywać, że kobiety w IT mogą dawać sobie świetnie radę, że jesteśmy równie kompetentne co mężczyźni, że nie jesteśmy jakimś gatunkiem chronionym czy rzadko spotykanym okazem w zoo.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Podsumowując&lt;/h2&gt;

&lt;p&gt;Dziękuje za to, że mogłam wziąć udział w tego rocznym Web Summit. Jednak patrząc z perspektywy programistki, gdybym kupiła ten bilet z własnych pieniędzy, byłabym bardzo rozczarowana. Naprawdę uwielbiam konferencje bardziej kameralne, gdzie wszyscy lub prawie wszyscy się znają lub kojarzą z widzenia. Gdzie moja obecność ma znaczenie. Gdzie ludzie dbają o siebie na wzajem. Brakowało mi tego na Web Summit. Najlepszą rzeczą jaką wyniosłam z tegorocznej wydarzenia to poznanie wspaniałych ludzi. Jestem naprawdę szczęśliwa, że nawet przy tak przytłaczającym tłumie można spotkać niesamowitych ludzi z różnych krajów. To wszystko, co chciałabym powiedzieć. Mam nadzieję, że następna edycja będzie lepsza.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Nov 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/pl/websummit-lisbon-2016</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/websummit-lisbon-2016</guid>
        
        <category>Web Summit</category>
        
        <category>Lizbona</category>
        
        
        <category>podróże</category>
        
        <category>warsztaty</category>
        
        <category>wydarzenia</category>
        
      </item>
    
      
      <item>
        <title>Leaflet - Wstęp do map</title>
        <description>&lt;p&gt;Jestem z powrotem! Tym razem chciałabym pokazać Wam trochę map. Dzisiejszym tematem będzie: Jak w prosty sposób można obsłużyć mapy na własnej stronie internetowej. Do tego potrzebne nam będzie:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt; - biblioteka JavaScript do obsługi map&lt;/li&gt;
&lt;li&gt;Fragmenty mapy (Maps tiles)&lt;/li&gt;
&lt;li&gt;Ruby on Rails (nie jest wymagany, na początek wystarczy strona &lt;strong&gt;html&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Zacznijmy od początku. Co to są &lt;strong&gt;map tiles&lt;/strong&gt;? Prostymi słowami, są to małe kwadratowe obrazki zawierające wygląd naszej mapy. Są one przygotowywane w postaci paczek, by można było na stronie wyświetlić większy fragment mapy.&lt;/p&gt;

&lt;h2&gt;Skąd możemy dostać takie fragmenty mapy?&lt;/h2&gt;

&lt;p&gt;Można zarejestrować się na stronie &lt;a href=&quot;https://www.mapbox.com/&quot;&gt;Mapbox&lt;/a&gt; i skorzystać z ich darmowego pakietu do obsługi map lub użyć &lt;a href=&quot;https://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt;. Jest wiele serwisów, które dostarczają map tiles, na końcu tego artykułu postaram się wymienić kilka z nich.&lt;/p&gt;

&lt;h2&gt;Przygotowania&lt;/h2&gt;

&lt;p&gt;Gdy w naszym projekcie mamy już dołączoną bibliotekę &lt;strong&gt;Leaflet&lt;/strong&gt; i wybraliśmy z jakich talii będziemy korzystać możemy zacząć.&lt;/p&gt;

&lt;p&gt;W naszym pliku &lt;code&gt;index.html&lt;/code&gt; dodajemy następująca linijkę:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Po stronie JavaScript potrzebujemy jeszcze ustawić wybranego dostawcę map tiles. W tym przykładzie będę używać CoffeeScript ale każda z prezentowanych funkcjonalności jest też możliwa do osiągnięcia w czystym JavaScript.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;map = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.301&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.654&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Mapbox tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/mapbox.png&quot;&gt;&lt;img src=&quot;/images/leaflet/mapbox.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map data &amp;amp;copy; &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt; contributors, &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/2.0/&amp;quot;&amp;gt;CC-BY-SA&amp;lt;/a&amp;gt;, Imagery © &amp;lt;a href=&amp;quot;http://mapbox.com&amp;quot;&amp;gt;Mapbox&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;your id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;accessToken: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;your token&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;OpenStreetMap tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/osm.png&quot;&gt;&lt;img src=&quot;/images/leaflet/osm.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://{s}.tile.osm.org/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map data &amp;amp;copy; &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt; contributors, &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/2.0/&amp;quot;&amp;gt;CC-BY-SA&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Toner tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/toner.png&quot;&gt;&lt;img src=&quot;/images/leaflet/toner.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://tile.stamen.com/toner/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map tiles by &amp;lt;a href=&amp;quot;http://stamen.com&amp;quot;&amp;gt;Stamen Design&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by/3.0&amp;quot;&amp;gt;CC BY 3.0&amp;lt;/a&amp;gt;. Data by &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://www.openstreetmap.org/copyright&amp;quot;&amp;gt;ODbL&amp;lt;/a&amp;gt;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;WaterColor tiles&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/watercolor.png&quot;&gt;&lt;img src=&quot;/images/leaflet/watercolor.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tileLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://tile.stamen.com/watercolor/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;attribution: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Map tiles by &amp;lt;a href=&amp;quot;http://stamen.com&amp;quot;&amp;gt;Stamen Design&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by/3.0&amp;quot;&amp;gt;CC BY 3.0&amp;lt;/a&amp;gt;. Data by &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt;, under &amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/3.0&amp;quot;&amp;gt;CC BY SA&amp;lt;/a&amp;gt;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;maxZoom: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I to wszystko, po odświeżeniu przeglądarki powinniśmy widzieć już mapę.&lt;/p&gt;

&lt;h2&gt;Dodawanie obiektów na mapę&lt;/h2&gt;

&lt;p&gt;Teraz zaczyna się prawdziwa zabawa! Możemy zacząć dodawać różne obiekty na mapę. Jedną ważną rzecz watro tu zaznaczyć. Każdy obiekt, który będzie pojawiał się na mapie posiada swoje współrzędne (tak jak w układnie współrzędnych na Matematyce). Leaflet używa dwóch układów współrzędnych. Układu &lt;strong&gt;Kartezjańskiego&lt;/strong&gt; i układu typu &lt;strong&gt;Szerokość-długość geograficzna&lt;/strong&gt;. Pierwszy z nich podaje współrzędne punktu jako &lt;code&gt;[długość, szerokość]&lt;/code&gt; a drugi jako &lt;code&gt;[szerokość, długość]&lt;/code&gt;. Zapamiętanie, gdzie którego z tych systemów używamy jest bardzo proste. Dla obiektu &lt;code&gt;GeoJSON&lt;/code&gt; używamy układu &lt;strong&gt;Kartezjańskiego&lt;/strong&gt; dla pozostałych elementów układu &lt;strong&gt;Geograficznego&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;Marker&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/marker.png&quot;&gt;&lt;img src=&quot;/images/leaflet/marker.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;marker = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.28895538456755&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.681907653808594&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Custom marker&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/custom-marker.png&quot;&gt;&lt;img src=&quot;/images/leaflet/custom-marker.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;customIcon = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconUrl: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;assets/womanonrails.jpg&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconSize: &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconAnchor: &lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;className: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;round&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;customMarker = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29391802001304&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.665471076965332&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;icon: &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customIcon&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;HTML marker&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/html-marker.png&quot;&gt;&lt;img src=&quot;/images/leaflet/html-marker.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;divIcon = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;className: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;div-icon&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;html: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;div&amp;gt;This is my custom html&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;iconSize: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.2845132498121&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.668603897094727&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;icon: &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Okrąg&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/circle.png&quot;&gt;&lt;img src=&quot;/images/leaflet/circle.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;circle = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.290024725454515&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.640880584716797&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;color: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;fillColor: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;#f03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;fillOpacity: &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Wielokąt&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/poligon.png&quot;&gt;&lt;img src=&quot;/images/leaflet/poligon.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;polygon = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;polygon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29830444909283&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.61384391784668&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29619353058144&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.620710372924805&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29084727901576&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.616890907287598&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29125855046426&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.61354351043701&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.2941373510724&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;18.611998558044434&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.29830444909283&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.61384391784668&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Popups&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/popup.png&quot;&gt;&lt;img src=&quot;/images/leaflet/popup.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nx&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;b&amp;gt;Hello world!&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;I am a popup.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am a circle.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;polygon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am a polygon.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;popup = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setLatLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;51.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am a standalone popup.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Zdarzenia&lt;/h4&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/leaflet/event.png&quot;&gt;&lt;img src=&quot;/images/leaflet/event.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;onMapClick = &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;(e) -&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Coordinate: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMapClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;onMapClick = &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;(e) -&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;popup = &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setLatLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;You clicked the map at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Coordinate: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latlng&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMapClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;GeoJSON&lt;/h4&gt;

&lt;p&gt;Myślę, że &lt;code&gt;geoJson&lt;/code&gt; jest jedną z najbardziej wszechstronnych opcji biblioteki Leaflet. Dzięki niej można wyświetlać wszystkie dotychczas poznane obiekty. Dodatkowo można w łatwy sposób zmienić style obiektów, podpinać do nich zdarzenia a także wyświetlać na mapie dane &lt;strong&gt;GIS&lt;/strong&gt; bezpośrednio z bazy danych takiej jak &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;geoData = &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Polygon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.613758087158203&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.298386690775416&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.618135452270508&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.3022518894775&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.619508743286133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.302279301112605&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.62457275390625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.30570563109659&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.62959384918213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.30510261491786&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.624873161315918&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.3016488295082&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.627877235412598&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.3005797498622&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.622384071350098&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.29600162425392&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.613758087158203&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.298386690775416&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;style = &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#ff7800&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;weight&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;opacity&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.65&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geoJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;style: &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Na koniec&lt;/h2&gt;

&lt;p&gt;To co pokazałam to tylko mały wycinek tego co można zrobić dzięki bibliotece &lt;strong&gt;Leaflet&lt;/strong&gt;. Jeżeli szukasz bardziej zaawansowanych funkcji (jak na przykład rysowanie kształtów) zapraszam do zapoznania się z poniższymi linkami:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Leaflet/Leaflet.draw&quot;&gt;Leaflet Draw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://geojson.io/&quot;&gt;GeoJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liedman.net/leaflet-routing-machine/&quot;&gt;Leaflet Routing Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/?csw=1&quot;&gt;Google Maps Javascript API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/modestmaps/modestmaps-js&quot;&gt;Modest Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/maps/&quot;&gt;Bing maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.pl/maps?source=tldso&quot;&gt;Google Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/&quot;&gt;Mapbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.maptiler.com/&quot;&gt;MapTiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://maps.stamen.com/&quot;&gt;Maps Stamen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mapquest.com/&quot;&gt;Map Quest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Tiles&quot;&gt;Tiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 13 Aug 2016 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/pl/leaflet</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/leaflet</guid>
        
        <category>maps</category>
        
        <category>geo data</category>
        
        <category>tips</category>
        
        
        <category>geo dane</category>
        
        <category>mapy</category>
        
        <category>tips</category>
        
      </item>
    
      
      <item>
        <title>Praca zdalna</title>
        <description>&lt;p&gt;Moim zdaniem pracę zdalną możemy podzielić na dwa typy. &lt;strong&gt;Synchroniczną&lt;/strong&gt; i &lt;strong&gt;asynchroniczną&lt;/strong&gt;. Synchroniczna praca zdalna jest wtedy, gdy zespół pracuje z różnych miejsc na świecie, ale pracuje w tym samym czasie (tej samej strefie czasowej). Przykładowo, ja pracuję według czasu środkowoeuropejskiego od 9:00 do 17:00. Natomiast, asynchroniczna praca zdalna, to praca nie tylko z różnych miejsc na świecie, ale również w różnych godzinach. W takim przypadku, może okazać się, że w konkretnym momencie tylko Ty pracujesz nad projektem.&lt;/p&gt;

&lt;p&gt;Ponieważ mam doświadczenie tylko w synchronicznej pracy zdalnej, więc skupię się właśnie na tym sposobie pracy.&lt;/p&gt;

&lt;h2&gt;Dzień po dniu&lt;/h2&gt;

&lt;p&gt;Pracując zdanie czy to z domu czy z biura, przez większość czasu praca wygląda zupełnie tak samo, jakby pracowało się w normalnej stacjonarnej firmie. Można powiedzieć, że każda osoba w zespole ma swoje osobne pomieszczenie (pełen komfort), tylko że nie przemieszczamy się pomiędzy tymi pomieszczeniami. Każdy siedzi w swoim pokoju. Raz dziennie spotykamy się wspólnie, używając narzędzi takich jak Hangout czy Skype. I to tyle. Resztę czasu poświęca się na zadania, które ma się do zrobienia. Gdy ktoś z nas potrzebuje porozmawiać z inną osobą z zespołu, używamy komunikatorów tekstowych takich jak Slack czy Skype. Najważniejsze w takiej pracy jest &lt;strong&gt;zaufanie&lt;/strong&gt;. Zaufanie, że każda osoba w zespole robi to co do niej należy i że robi to najlepiej jak potrafi.&lt;/p&gt;

&lt;h3&gt;Moje obserwacje:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Im mniej ludzi wokół mnie, tym lepiej potrafię się skupić.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ile razy zdarzyło Wam się zmarnować czas na jakieś niepotrzebne rozmowy w pracy? Ile razy ktoś przyszedł do Was, zapytać o coś lub po prostu zagadać? Ile czasu zmarnowaliście na niepotrzebne spotkania, z których i tak nic nie wynieśliście? Jest mnóstwo powodu, by nie robić tego, co się powinno w trakcie pracy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mogę pracować z każdego miejsca na świecie. Czy to biuro, mój dom, Warszawa, Kraków czy Australia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To jest jeden z największych plusów pracy zdalnej. Można pracować z domu, kiedy zajdzie taka potrzeba. Odwiedzić znajomych lub rodzinę i pracować od nich. Można też wyjechać do innego kraju.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Potrzebna jest dobra organizacja swojego czasu pracy a także komunikacji z innymi.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ponieważ mój zespół spotyka się na raz dziennie na bardzo krótkim spotkaniu (około 15 minut), o wiele lepiej spotkanie przebiega, gdy jesteśmy do niego przygotowani. Wiemy o co zapytać, na co zwrócić uwagę i o czym poinformować resztę zespołu. Każdy z nas musi być dobrze zorganizowany. Nie ma miejsca na marnowanie czasu. Motywacja do pracy nie może pochodzić z zewnątrz. Z tego, że ktoś Cię kontroluje i patrzy Ci na ręce. Nie ma takiej osoby. Liczy się zaufanie. Ja ufam reszcie zespołu a zespół ufa mi.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Każda rzecz w projekcie powinna być udokumentowana.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wiele funkcjonalności w projekcie, jest tworzone równolegle przez różne osoby. Ponieważ komunikacja twarzą w twarz, przy pracy zdalnej jest ograniczona, wszystkie istotne elementy zapisuje się w dokumentacji. Pozwala to, na zapoznanie się z już istniejącymi elementami/procesami, z którymi nie mieliśmy jeszcze styczności. Dokumentacja dotyczy sposobu pracy, stawiania środowiska, dodawanej funkcjonalności, logiki i wielu innych rzeczy.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Praca zdalna z Australii&lt;/h2&gt;

&lt;p&gt;Tak jak już mówiłam, pracując zdalnie można pracować z każdego miejsca na świecie. Ja zdecydowałam, że spędzę prawie 2 miesiące w Australii i będę stamtąd pracować zdalnie. Były momenty, gdy praca z Australii była prosta. Czas płyną szybko i produktywnie. Ale były też momenty, gdy było bardzo ciężko. Mój zespół pracuje z Europy (czyli w czasie środkowoeuropejskim), kiedy więc przeniosłam się do Australii moje godziny pracy zmieniły się z 9 do 17 na od 18 do 2 nad ranem. Jak już mówiłam pracujemy w zespole synchronicznie. Zdecydowałam, że będę pracować tylko przez połowę czasu. Dziękuje bardzo mojemu zespołowi, że było to możliwe. Moimi nowymi godzinami pracy były 18 do 22. Czasami zdarzało się, że byłam zmęczona po całym dniu, ale trzeba było postawić się do pionu i zacząć pracować. Pracowałam z przeróżnych miejsc. Przez większość czasu pracowałam ze swojej sypialni, ale zdarzało się pracować z centrum handlowego, z kanapy w pokoju gościnnym znajomych, hoteli czy nawet z samochodu. Tego ostatniego miejsca nie polecam osobom z chorobą lokomocyjną. Czasem zdarzały się problemy z Internetem lub po prostu jego brak. W takich sytuacjach pracowałam przy pomocy Internetu mobilnego. Tak Internetu mobilnego! A czasem po prostu chciałam spędzić wieczór z przyjaciółmi, jednak miałam obowiązki do wykonania.&lt;/p&gt;

&lt;p&gt;Chociaż zdarzały się ciężkie chwile i problemy, to stwierdzam, że to był wspaniały czas. Dzień rozpoczynałam o 7 rano czasu australijskiego. Robiła szybkie ćwiczenia, poświęcałam trochę czasu na moje zainteresowania i miałam osiem godzin na odkrywanie Australii. Wieczorami siadałam przy moim komputerze i zaczynałam pracować. Dzięki pracy zdalnej mogła zwiedzić cudowne miejsca. Przez cały czas czułam się jak na wakacjach. Bardzo długich wakacjach. Jeżeli ktoś by mnie kiedyś zapytał czy było warto, stanowczo odpowiedziałabym &lt;strong&gt;TAK&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/remote/duck.jpg&quot;&gt;&lt;img src=&quot;/images/remote/duck.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/remote/memo1.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo1.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo2.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo2.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo3.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo3.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/remote/formula1.jpg&quot;&gt;&lt;img src=&quot;/images/remote/formula1.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/remote/memo4.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo4.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo5.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo5.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/victoria.jpg&quot;&gt;&lt;img src=&quot;/images/remote/victoria.jpg&quot;&gt;&lt;/a&gt;
  &lt;figcaption&gt;Wspomnienia z Australii&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Podsumowując&lt;/h2&gt;

&lt;p&gt;Praca zdalna daje mnóstwo możliwości. Można pracować z różnych miejsc na świecie i odkrywać je z zupełnie innej perspektywy, nie tylko z perspektywy turysty. Trzeba pamiętać, że taki sposób pracy nie jest dla wszystkich. Trzeba być pewnym, że jest się wstanie skupić i wykonywać swoje obowiązki. Dzień po dniu. Dobra organizacja pracy, samozaparcie i konsekwencja to podstawa.&lt;/p&gt;

&lt;p&gt;Jeżeli zdecydujesz się na taki sposób pracy i będziesz chciała/chciał gdzieś wyjechać, to najpierw odpowiedz sobie na kilka pytań:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Czy w miejscu docelowym jest Internet? WiFi?&lt;/li&gt;
&lt;li&gt;Czy masz wszystkie potrzebne rzeczy, oprogramowanie, projekty na swoim laptopie?&lt;/li&gt;
&lt;li&gt;Czy zawsze będzie dostępny prąd?&lt;/li&gt;
&lt;li&gt;Ile chcę poświęcić czasu na pracę?&lt;/li&gt;
&lt;li&gt;Co będę robić w ramach mojej pracy?&lt;/li&gt;
&lt;li&gt;Gdzie będziesz pracować?&lt;/li&gt;
&lt;li&gt;Jak bardzo zorganizowana/zorganizowany jestem?&lt;/li&gt;
&lt;li&gt;Jak bardzo zmotywowana/zmotywowany jestem?&lt;/li&gt;
&lt;li&gt;Jaka jest strefa czasowa w miejscu przeznaczenia?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
Z mojej perspektywy było to niesamowite doświadczenie. Jestem naprawdę szczęśliwa, że mogłam spróbować.
To wszystko na dziś. Mam nadzieje, że artykuł Wam się podobał. Jeżeli macie jakieś pytania, piszcie w komentarzach. Do następnego razu!&lt;/p&gt;
</description>
        <pubDate>Sun, 15 May 2016 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/pl/remote-work</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/remote-work</guid>
        
        <category>praca</category>
        
        <category>praca zdalna</category>
        
        
        <category>podróże</category>
        
        <category>praca</category>
        
        <category>praca zdalna</category>
        
      </item>
    
      
      <item>
        <title>Git Rebase</title>
        <description>&lt;p&gt;Poprzednie dwa artykuły wprowadzały do tego &lt;a href=&quot;/pl/what-is-git&quot;&gt;co to jest git&lt;/a&gt; i jak go &lt;a href=&quot;/pl/git-usage&quot;&gt;używać&lt;/a&gt;. Możecie tam znaleźć podstawowe informacje na temat gita. Dzisiaj chciałabym skupić się na trochę bardziej zaawansowanych rzeczach związanych z gitem. W zeszłym tygodniu robiłam krótką prezentację dotyczącą funkcji &lt;code&gt;git rebase&lt;/code&gt;, pomyślałam więc że to dobry pomysł by zrobić z tego krótką notatkę tutaj. Oto ona.&lt;/p&gt;

&lt;p&gt;Kiedy używamy gita mamy dwie możliwości dociągnięcia nowych zmian ze zdalnego repozytorium. &lt;strong&gt;Merge&lt;/strong&gt; i &lt;strong&gt;rebase&lt;/strong&gt;. Jeżeli używamy funkcji &lt;strong&gt;merge&lt;/strong&gt; (jest to opcja domyślna) git stara się rozwiązać wszystkie konflikty i umieszcza nasze zmiany między zmianami innych członków zespołu, porządkując je względem linii czasu. Natomiast gdy używamy opcji &lt;strong&gt;rebase&lt;/strong&gt; git przenosi nasze lokalne zmiany do takiego tymczasowego miejsca i dociąga to co się zmieniło z zdalnego repozytoriom. Po czym każdą naszą lokalną zmianę umieszcza z powrotem na branch na samej górze wszystkich dociągniętych zmian. Mówimy wtedy, że jesteśmy na samej górze &lt;strong&gt;HEAD&lt;/strong&gt;. Można powiedzieć, że HEAD jest czymś w rodzaju takiego znacznika, która wersja jest aktualna. Kiedy na zdalnym repozytorium są zmiany, których jeszcze nie mamy u siebie na komputerze, mówimy że jesteśmy &lt;strong&gt;za HEAD&lt;/strong&gt; (czyli za tym głównym znacznikiem), jak tylko dociągniemy zmiany to będziemy &lt;strong&gt;na bieżącym HEAD&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/rebase-diagram.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/rebase-diagram.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;A teraz zobaczmy jak wizualnie wyglądają różnice między tymi dwoma metodami.&lt;/p&gt;

&lt;h2&gt;Merge&lt;/h2&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/merge.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/merge.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Widać że zmiany, które tworzą logiczną całość po dołączeniu do gałęzi (branch) develop zostają przeplecione innymi zmianami. Wszystko powoduje wrażenie bałaganu i nieładu. Dodatkowo da się zauważyć zmiany (commit), których sami nie zrobiłyśmy. Są to właściwie informacje o tym jak zostały połączone pliki modyfikowane przez kilka osób.&lt;/p&gt;

&lt;h2&gt;Rebase&lt;/h2&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/rebase.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/rebase.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Tutaj wszystko ma swoje miejsce. Zmiany są pogrupowane w jakieś logiczne całości. Dodatkowo widzimy historię naszych gałęzi (branches).&lt;/p&gt;

&lt;h2&gt;W takim razie jak możemy to zrobić, gdy nasz kod był tylko zapisany lokalnie?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Przechodzimy na gałąź (branch) develop&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dociągamy najnowsze zmiany&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Przełączmy się na naszą gałąź (branch) gdzie wcześniej pracowałyśmy&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout my-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Robimy rebase&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Możemy wrzucić zmiany na zdalne repozytorium&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Czasami gdy będziemy robić &lt;code&gt;git rebase&lt;/code&gt;, git może nie dać sobie rady sam z rozwiązywaniem konfliktów (czyli łączeniem plików modyfikowanych przez kilka osób). Wtedy do akcji wkraczamy my. Poprawnie rozwiązujemy konflikty i dodajemy nasze zmiany, tak by git je widział. Następnie możemy dalej kontynłować rebase.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase develop
&lt;span class=&quot;c&quot;&gt;# rozwiązanie konfliktów&lt;/span&gt;
git add -u &lt;span class=&quot;c&quot;&gt;# dodanie wszystkich zmian do śledzenia&lt;/span&gt;
git rebase --continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Musimy porozmawiać jeszcze o jedne rzeczy. Czasami nasze zmiany są już na zdalnym repozytorium a my musimy/chcemy zrobić rebase. Po zakończeniu całej operacji chcemy umieści zmiany z powrotem na zdalnym repozytorium. Jednak tym razem &lt;code&gt;git push&lt;/code&gt; nam nie zadziała. W takie sytuacji możemy zrobić tak:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push -f origin my-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uwaga! Z tym poleceniem trzeba być bardzo uważnym. Polecenie to nadpisze wszystkie zmiany na wybranej przez nas gałęzi (branch) zmianami, które miałyśmy lokalnie. Jeżeli tylko my pracujemy na tej gałęzi nic się nie stanie. Jeżeli współdzielimy tą gałąź z kimś innym, trzeba myśleć o tym, że możemy usunąć czyjeś zmiany. Musimy wiedzieć co robimy i zdawać sobie sprawę z konsekwencji.&lt;/p&gt;

&lt;p&gt;Gdybyśmy chcieli zrezygnować z rebase, możemy do tego celu użyć polecenia:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To wszystko na dzisiaj. Pokazałam Wam jak można używać &lt;code&gt;git rebase&lt;/code&gt;. Mam nadzięję, że było to dla Was pomocne. Jeżeli miacie jakieś pytania lub sugestie zapraszam do komentowania. Do zobaczenia następnym razem!&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Apr 2016 00:00:00 -0400</pubDate>
        <link>https://womanonrails.com/pl/git-rebase</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/git-rebase</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
        <category>narzędzia</category>
        
        <category>środowisko</category>
        
      </item>
    
      
      <item>
        <title>Podstawowe użycie Git</title>
        <description>&lt;p&gt;&lt;a href=&quot;/pl/what-is-git&quot;&gt;Ostatnim razem&lt;/a&gt; mówiliśmy trochę o tym dlaczego &lt;strong&gt;Git&lt;/strong&gt; jest bardzo użytecznym narzędziem, zwłaszcza dla programistów. Dzisiaj chciałabym się skupić na tym, jak zacząć używać narzędzia Git przynajmniej w bardzo podstawowym zakresie. Pokażę kilka najczęściej używanych poleceń, ale jeżeli chcecie się dowiedzieć więcej polecam &lt;a href=&quot;https://git-scm.com/documentation&quot;&gt;dokumentację&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Zaczynamy!&lt;/h2&gt;

&lt;p&gt;Git jest &lt;strong&gt;rozproszonym systemem wersjonowania&lt;/strong&gt; (distributed repository lub distributed version control system). To znaczy, że każdy w zespole ma u siebie lokalnie całą historię zmian. Dzięki temu można dodać do repozytorium kolejne swoje zmiany bez połączenia z Internetem. Jednak najważniejszą cechą takiego systemu kontroli wersji jest to, że nawet gdy u jednej osoby zmiany zostaną utracone reszta zespołu ciągle posiada całą historię prac. W przypadku scentralizowanego systemy kontroli wersji to problemy w centralnym repozytorium powodują utratę zmian u wszystkich członków zespołu.&lt;/p&gt;

&lt;p&gt;Mówiąc o narzędziu Git będę używać wiersza poleceń. Myślę, że taki sposób użycia jest łatwiejszy do zrozumienia co tak naprawdę się dzieje niż używanie jakichś graficznych programów.&lt;/p&gt;

&lt;h2&gt;Po pierwsze - konfiguracja&lt;/h2&gt;

&lt;p&gt;Gdy używamy narzędzia Git, chcemy wiedzieć które zmiany były zrobione przez nas. By to ustawić wykonujemy następujące polecenia:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.name &amp;quot;Your Name&amp;quot;
git config --global user.email you_email_address@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Możemy też ustawić by polecenia z narzędzia Git wyświetlały się na kolorowo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Stworzenie swojego pierwszego repozytorium&lt;/h2&gt;

&lt;p&gt;Aby zacząć używać narzędzia Git w naszym projekcie, przechodzimy do katalogu naszego projektu za pomocą terminala (wiersza poleceń) i inicjujemy narzędzie Git w środku.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To polecenie rozpocznie pracę z Git tylko lokalnie na naszym komputerze. By można było umieścić nasze repozytorium na serwerze będziemy potrzebować narzędzi takich jak &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; lub &lt;a href=&quot;https://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;. Dobrze, teraz możemy zacząć prawdziwą pracę z naszym repozytorium. Bardzo przydatną komendą będzie:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To polecenie mówi nam co zmieniło się od ostatniego użycia narzędzia Git. Przykładowo mamy plik napisany w języku Ruby.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ten plik nie jest śledzony przez Git. W takiej sytuacji możemy zobaczyć coś takiego:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
#
# Initial commit
#
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#   hello_world.rb
#
# nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Pierwszy commit&lt;/h2&gt;

&lt;p&gt;Teraz musimy powiedzieć do naszego systemu kontroli wersji: &lt;em&gt;Proszę, śledź zmiany w tym pliku&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add hello_world.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Po wykonaniu tego polecenia sprawdzamy status naszych zmian &lt;code&gt;git status&lt;/code&gt; i otrzymujemy:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
#
# Initial commit
#
# Changes to be commited:
#   (use &amp;quot;git rm --cached  &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#   new file: hello_world.rb
#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz możemy zrobić &lt;strong&gt;commit&lt;/strong&gt;. Można powiedzieć, że commit to takie przygotowane do wysłania pudełko. Do pudełka wkładamy wszystkie elementy, które wspólnie tworzą jedną całość. Ponieważ zmieniliśmy tylko jeden plik, to nasz commit będzie składał się tylko z niego.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;Create a hello function&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz Git status pokazuje:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
# nothing to commit (working directory clean)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jeżeli zmienimy naszą funkcję, to zobaczymy:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
# Changed but not updated:
#
#  modified: hello_world.rb
# no changes add to commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jeżeli chcemy zrobić nowy commit, musimy dodać nasze zmiany do pudełka:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add hello_world.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;i oznaczyć opisem co jest w środku:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;Change our hello function&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Wysłanie/ściągnięcie zmian do/z zdalnego repozytorium&lt;/h2&gt;

&lt;p&gt;W tej chwili mamy zapisane nasze zmiany tylko lokalnie. Teraz chcielibyśmy wysłać je gdzieś na zewnątrz (na jakiś serwer), tak byśmy mogli wymieniać się naszymi zmianami z całym zespołem. Te dwie czynności mają swoje nazwy. Wysyłanie zmian na serwer to &lt;strong&gt;push&lt;/strong&gt; a ściąganie to &lt;strong&gt;pull&lt;/strong&gt;. Do tego posłuży nam &lt;strong&gt;GitHub&lt;/strong&gt; ale można też korzystać z innych rozwiązań.&lt;/p&gt;

&lt;p&gt;Kiedy mamy już swoje konto na GitHub, tworzymy &lt;strong&gt;nowe repozytorium&lt;/strong&gt;. A lokalnie w linii poleceń wykonujemy następującą komendę:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git remote add origin link_to_or_repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nic się nie martwcie, po stworzeniu nowego repozytorium, GitHub pokaże Wam wszystkie komendy jakie potrzebujecie wykonać. Wystarczy tylko skopiować je do swojego terminala. W skrócie komenda ta mówi nam: &lt;em&gt;Hej, od tej chwili mam zdalne repozytorium (czyli mam repozytorium na serwerze) i nazywa się ono origin&lt;/em&gt;. Gdy będziemy chcieli wysłać tam nasze zmiany to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mówimy wtedy do narzędzia Git: &lt;em&gt;Wyślij mój kod na gałąź (branch)&lt;/em&gt; &lt;code&gt;master&lt;/code&gt; &lt;em&gt;na repozytorium o nazwie&lt;/em&gt; &lt;code&gt;origin&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;Co to jest branch (gałąź)?&lt;/h4&gt;

&lt;p&gt;Branch jest jak ścieżka. W naszym projekcie mamy wiele ścieżek, każda z nich może wyglądać inaczej, ale w danym momencie możemy iść tylko jedną ścieżką. Domyślnie po stworzeniu repozytorium Git ma jedną ścieżkę, którą nazywa &lt;code&gt;master&lt;/code&gt;. Po poleceniu, które widzimy nieco wyżej GitHub zapyta się nas o naszą nazwę użytkownika (login) i hasło. Gdy podamy te informacje nasze zmiany znajdą się na serwerze.&lt;/p&gt;

&lt;h2&gt;Ostatnia rzecz!&lt;/h2&gt;

&lt;p&gt;Kiedy pracujemy z innymi osobami nad jednym projektem to tak jak już wspominałam chcemy się wymieniać naszymi zmianami. Do tej pory nauczyliśmy się wysyłać na serwer zmiany teraz chcielibyśmy je stamtąd pobrać:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To polecenie &lt;strong&gt;pull&lt;/strong&gt; spowoduje, że pobierzemy z naszego repozytorium o nazwie &lt;code&gt;origin&lt;/code&gt; bieżący branch (czyli tą naszą ścieżkę). Ponieważ mamy tylko jeden branch - &lt;code&gt;master&lt;/code&gt; wszystkie zmiany zostaną dociągnięte właśnie dla gałęzi (branch) &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To na razie tyle. Szybki przegląd podstawowych poleceń używanych do obsługi systemu kontroli wersji jakim jest Git. Mam nadzieje, że Wam się podobało. Jeżeli chcielibyście dowiedzieć sie czegoś więcej lub chcielibyście bym coś bardziej wytłumaczyła zostawcie komentarz. Do zobaczenia następnym razem. Pa!&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Feb 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/pl/git-usage</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/git-usage</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
        <category>narzędzia</category>
        
        <category>środowisko</category>
        
      </item>
    
      
      <item>
        <title>Lambda w Ruby</title>
        <description>&lt;p&gt;Niedawno miałam sytuację w której pracowałam z różnymi (choć pod pewnymi względami podobnymi) kolekcjami w Ruby. Te kolekcje miały bardzo podobne metody do przeszukiwania względem nazwy. W tym konkretnym przypadku zdecydowałam się na skorzystanie z lambdy. Zobaczcie jak to wyglądało.&lt;/p&gt;

&lt;p&gt;Tak wyglądał kod przed zmianą:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@first_collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To nie jest zły kod, ale w innych miejscach można było spotkać coś bardzo podobnego. Przykładowo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@sedond_collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Zdecydowałam się na użycie lambda. Stworzyłam metodę, która generowała mi lambdę dla różnych kolekcji a jako argument otrzymywała nazwy, po których miała przeszukiwać kolekcję. Oto ta metoda:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jak można tego użyć?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To rozwiązanie zmniejszyło znacznie ilość powtórzeń pokazanego na początku kodu. I co najważniejsze kolekcja jest deklarowana tylko w jednym miejscu. Mówiąc szczerze ten sposób rozwiązania był tylko przejściowy, ponieważ końcowym etapem było wyodrębnienie kolekcji do osobnej klasy. Jednak na ten konkretny moment było to rozwiązanie dla mnie zupełnie satysfakcjonujące i przede wszystkim proste.&lt;/p&gt;

&lt;p&gt;Jeżeli chcielibyście się dowiedzieć czegoś więcej o lambdach i programowaniu funkcyjnym, zapraszam do przejrzenia mojej prezentacji na ten temat jest dostępna &lt;a href=&quot;https://womanonrails.github.io/presentation-functional-programming-in-ruby/#1&quot;&gt;tutaj&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mam nadzieje, że było to dla Was interesujące. Zostawcie komentarz i do zobaczenia następnym razem.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Feb 2016 00:00:00 -0500</pubDate>
        <link>https://womanonrails.com/pl/lambda</link>
        <guid isPermaLink="true">https://womanonrails.com/pl/lambda</guid>
        
        <category>Ruby</category>
        
        <category>refactoring</category>
        
        
        <category>Ruby</category>
        
        <category>refactoring</category>
        
      </item>
    
  </channel>
</rss>
