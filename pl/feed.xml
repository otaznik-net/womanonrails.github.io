<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Woman on Rails</title>
    <description></description>
    <link>/pl/</link>
    <atom:link href="/pl/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 11 Jun 2016 04:10:07 -0400</pubDate>
    <lastBuildDate>Sat, 11 Jun 2016 04:10:07 -0400</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      
      <item>
        <title>Praca zdalna</title>
        <description>&lt;p&gt;Moim zdaniem pracę zdalną możemy podzielić na dwa typy. &lt;strong&gt;Synchroniczną&lt;/strong&gt; i &lt;strong&gt;asynchroniczną&lt;/strong&gt;. Synchroniczna praca zdalna jest wtedy, gdy zespół pracuje z różnych miejsc na świecie, ale pracuje w tym samym czasie (tej samej strefie czasowej). Przykładowo, ja pracuję według czasu środkowoeuropejskiego od 9:00 do 17:00. Natomiast, asynchroniczna praca zdalna, to praca nie tylko z różnych miejsc na świecie, ale również w różnych godzinach. W takim przypadku, może okazać się, że w konkretnym momencie tylko Ty pracujesz nad projektem.&lt;/p&gt;

&lt;p&gt;Ponieważ mam doświadczenie tylko w synchronicznej pracy zdalnej, więc skupię się właśnie na tym sposobie pracy.&lt;/p&gt;

&lt;h2&gt;Dzień po dniu&lt;/h2&gt;

&lt;p&gt;Pracując zdanie czy to z domu czy z biura, przez większość czasu praca wygląda zupełnie tak samo, jakby pracowało się w normalnej stacjonarnej firmie. Można powiedzieć, że każda osoba w zespole ma swoje osobne pomieszczenie (pełen komfort), tylko że nie przemieszczamy się pomiędzy tymi pomieszczeniami. Każdy siedzi w swoim pokoju. Raz dziennie spotykamy się wspólnie, używając narzędzi takich jak Hangout czy Skype. I to tyle. Resztę czasu poświęca się na zadania, które ma się do zrobienia. Gdy ktoś z nas potrzebuje porozmawiać z inną osobą z zespołu, używamy komunikatorów tekstowych takich jak Slack czy Skype. Najważniejsze w takiej pracy jest &lt;strong&gt;zaufanie&lt;/strong&gt;. Zaufanie, że każda osoba w zespole robi to co do niej należy i że robi to najlepiej jak potrafi.&lt;/p&gt;

&lt;h3&gt;Moje obserwacje:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Im mniej ludzi wokół mnie, tym lepiej potrafię się skupić.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ile razy zdarzyło Wam się zmarnować czas na jakieś niepotrzebne rozmowy w pracy? Ile razy ktoś przyszedł do Was, zapytać o coś lub po prostu zagadać? Ile czasu zmarnowaliście na niepotrzebne spotkania, z których i tak nic nie wynieśliście? Jest mnóstwo powodu, by nie robić tego, co się powinno w trakcie pracy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mogę pracować z każdego miejsca na świecie. Czy to biuro, mój dom, Warszawa, Kraków czy Australia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To jest jeden z największych plusów pracy zdalnej. Można pracować z domu, kiedy zajdzie taka potrzeba. Odwiedzić znajomych lub rodzinę i pracować od nich. Można też wyjechać do innego kraju.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Potrzebna jest dobra organizacja swojego czasu pracy a także komunikacji z innymi.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ponieważ mój zespół spotyka się na raz dziennie na bardzo krótkim spotkaniu (około 15 minut), o wiele lepiej spotkanie przebiega, gdy jesteśmy do niego przygotowani. Wiemy o co zapytać, na co zwrócić uwagę i o czym poinformować resztę zespołu. Każdy z nas musi być dobrze zorganizowany. Nie ma miejsca na marnowanie czasu. Motywacja do pracy nie może pochodzić z zewnątrz. Z tego, że ktoś Cię kontroluje i patrzy Ci na ręce. Nie ma takiej osoby. Liczy się zaufanie. Ja ufam reszcie zespołu a zespół ufa mi.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Każda rzecz w projekcie powinna być udokumentowana.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wiele funkcjonalności w projekcie, jest tworzone równolegle przez różne osoby. Ponieważ komunikacja twarzą w twarz, przy pracy zdalnej jest ograniczona, wszystkie istotne elementy zapisuje się w dokumentacji. Pozwala to, na zapoznanie się z już istniejącymi elementami/procesami, z którymi nie mieliśmy jeszcze styczności. Dokumentacja dotyczy sposobu pracy, stawiania środowiska, dodawanej funkcjonalności, logiki i wielu innych rzeczy.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Praca zdalna z Australii&lt;/h2&gt;

&lt;p&gt;Tak jak już mówiłam, pracując zdalnie można pracować z każdego miejsca na świecie. Ja zdecydowałam, że spędzę prawie 2 miesiące w Australii i będę stamtąd pracować zdalnie. Były momenty, gdy praca z Australii była prosta. Czas płyną szybko i produktywnie. Ale były też momenty, gdy było bardzo ciężko. Mój zespół pracuje z Europy (czyli w czasie środkowoeuropejskim), kiedy więc przeniosłam się do Australii moje godziny pracy zmieniły się z 9 do 17 na od 18 do 2 nad ranem. Jak już mówiłam pracujemy w zespole synchronicznie. Zdecydowałam, że będę pracować tylko przez połowę czasu. Dziękuje bardzo mojemu zespołowi, że było to możliwe. Moimi nowymi godzinami pracy były 18 do 22. Czasami zdarzało się, że byłam zmęczona po całym dniu, ale trzeba było postawić się do pionu i zacząć pracować. Pracowałam z przeróżnych miejsc. Przez większość czasu pracowałam ze swojej sypialni, ale zdarzało się pracować z centrum handlowego, z kanapy w pokoju gościnnym znajomych, hoteli czy nawet samochodu. Tego ostatniego miejsca nie polecam osobą z chorobą lokomocyjną. Czasem zdarzały się problemy z Internetem lub po prostu jego brak. W takich sytuacjach pracowałam dzięki możliwością Internetu mobilnego. Tak Internetu mobilnego! A czasem po prostu chciałam spędzić wieczór z przyjaciółmi, jednak miałam obowiązki do wykonania.&lt;/p&gt;

&lt;p&gt;Chociaż zdarzały się ciężkie chwile i problemy, to stwierdzam, że to był wspaniały czas. Dzień rozpoczynałam o 7 rano czasu australijskiego. Robiła szybkie ćwiczenia, poświęcałam trochę czasu na moje zainteresowania i miałam osiem godzin na odkrywanie Australii. Wieczorami siadałam przy moim komputerze i zaczynałam pracować. Dzięki pracy zdalnej mogła zwiedzić cudowne miejsca. Przez cały czas czułam się jak na wakacjach. Bardzo długich wakacjach. Jeżeli ktoś by mnie kiedyś zapytał czy było warto, stanowczo odpowiedziałabym &lt;strong&gt;TAK&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/remote/duck.jpg&quot;&gt;&lt;img src=&quot;/images/remote/duck.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/remote/memo1.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo1.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo2.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo2.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo3.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo3.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/remote/formula1.jpg&quot;&gt;&lt;img src=&quot;/images/remote/formula1.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/remote/memo4.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo4.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/memo5.jpg&quot;&gt;&lt;img src=&quot;/images/remote/memo5.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/remote/victoria.jpg&quot;&gt;&lt;img src=&quot;/images/remote/victoria.jpg&quot;&gt;&lt;/a&gt;
  &lt;figcaption&gt;Wspomnienia z Australii&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Podsumowując&lt;/h2&gt;

&lt;p&gt;Praca zdalna daje mnóstwo możliwości. Można pracować z różnych miejsc na świecie i odkrywać je z zupełnie innej perspektywy, nie tylko z perspektywy turysty. Trzeba pamiętać, że taki sposób pracy nie jest dla wszystkich. Trzeba być pewnym, że jest się wstanie skupić i wykonywać swoje obowiązki konsekwentnie. Dzień po dniu. Dobra organizacja pracy, samozaparcie i konsekwencja to podstawa.&lt;/p&gt;

&lt;p&gt;Jeżeli zdecydujesz się na taki sposób pracy i będziesz chciała/chciał gdzieś wyjechać, to najpierw odpowiedz sobie na kilka pytań:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Czy w miejscu docelowym jest Internet? WiFi?&lt;/li&gt;
&lt;li&gt;Czy masz wszystkie potrzebne rzeczy, oprogramowanie, projekty na swoim laptopie?&lt;/li&gt;
&lt;li&gt;Czy zawsze będzie dostępny prąd?&lt;/li&gt;
&lt;li&gt;Ile chce poświęcić czasu na pracę?&lt;/li&gt;
&lt;li&gt;Co będę robić w ramach mojej pracy?&lt;/li&gt;
&lt;li&gt;Gdzie będziesz pracować?&lt;/li&gt;
&lt;li&gt;Jak bardzo zorganizowana/zorganizowany jestem?&lt;/li&gt;
&lt;li&gt;Jak bardzo zmotywowana/zmotywowany jestem?&lt;/li&gt;
&lt;li&gt;Jaka jest strefa czasowa na miejscu przeznaczenia?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
Z mojej perspektywy było to niesamowite doświadczenie. Jestem na prawdę szczęśliwa, że mogłam spróbować.
To wszystko na dziś. Mam nadzieje, że artykuł Wam się podobał. Jeżeli macie jakieś pytania, piszcie w komentarzach. Do następnego razu!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;zdjęcia&lt;/li&gt;
&lt;li&gt;wideo z yt fractalsoftu - link to playlisty&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 May 2016 00:00:00 -0400</pubDate>
        <link>/pl/remote-work</link>
        <guid isPermaLink="true">/pl/remote-work</guid>
        
        <category>praca</category>
        
        <category>praca zdalna</category>
        
        
        <category>podróże</category>
        
        <category>praca</category>
        
        <category>praca zdalna</category>
        
      </item>
    
      
      <item>
        <title>Git Rebase</title>
        <description>&lt;p&gt;Poprzednie dwa artykuły wprowadzały do tego &lt;a href=&quot;/pl/what-is-git&quot;&gt;co to jest git&lt;/a&gt; i jak go &lt;a href=&quot;/pl/git-usage&quot;&gt;używać&lt;/a&gt;. Możecie tam znaleźć podstawowe informacje na temat gita. Dzisiaj chciałabym skupić się na trochę bardziej zaawansowanych rzeczach związanych z gitem. W zeszłym tygodniu robiłam krótką prezentację dotyczącą funkcji &lt;code&gt;git rebase&lt;/code&gt;, pomyślałam więc że to dobry pomysł by zrobić z tego krótką notatkę tutaj. Oto ona.&lt;/p&gt;

&lt;p&gt;Kiedy używamy gita mamy dwie możliwości dociągnięcia nowych zmian ze zdalnego repozytorium. &lt;strong&gt;Merge&lt;/strong&gt; i &lt;strong&gt;rebase&lt;/strong&gt;. Jeżeli używamy funkcji &lt;strong&gt;merge&lt;/strong&gt; (jest to opcja domyślna) git stara się rozwiązać wszystkie konflikty i umieszcza nasze zmiany między zmianami innych członków zespołu, porządkując je względem linii czasu. Natomiast gdy używamy opcji &lt;strong&gt;rebase&lt;/strong&gt; git przenosi nasze lokalne zmiany do takiego tymczasowego miejsca i dociąga to co się zmieniło z zdalnego repozytoriom. Po czym każdą naszą lokalną zmianę umieszcza z powrotem na branch na samej górze wszystkich dociągniętych zmian. Mówimy wtedy, że jesteśmy na samej górze &lt;strong&gt;HEAD&lt;/strong&gt;. Można powiedzieć, że HEAD jest czymś w rodzaju takiego znacznika, która wersja jest aktualna. Kiedy na zdalnym repozytorium są zmiany, których jeszcze nie mamy u siebie na komputerze, mówimy że jesteśmy &lt;strong&gt;za HEAD&lt;/strong&gt; (czyli za tym głównym znacznikiem), jak tylko dociągniemy zmiany to będziemy &lt;strong&gt;na bieżącym HEAD&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/rebase-diagram.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/rebase-diagram.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;A teraz zobaczmy jak wizualnie wyglądają różnice między tymi dwoma metodami.&lt;/p&gt;

&lt;h2&gt;Merge&lt;/h2&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/merge.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/merge.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Widać że zmiany, które tworzą logiczną całość po dołączeniu do gałęzi (branch) develop zostają przeplecione innymi zmianami. Wszystko powoduje wrażenie bałaganu i nieładu. Dodatkowo da się zauważyć zmiany (commit), których sami nie zrobiłyśmy. Są to właściwie informacje o tym jak zostały połączone pliki modyfikowane przez kilka osób.&lt;/p&gt;

&lt;h2&gt;Rebase&lt;/h2&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/git-rebase/rebase.png&quot;&gt;&lt;img src=&quot;/images/git-rebase/rebase.png&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Tutaj wszystko ma swoje miejsce. Zmiany są pogrupowane w jakieś logiczne całości. Dodatkowo widzimy historię naszych gałęzi (branches).&lt;/p&gt;

&lt;h2&gt;W takim razie jak możemy to zrobić, gdy nasz kod był tylko zapisany lokalnie?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Przechodzimy na gałąź (branch) develop&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dociągamy najnowsze zmiany&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Przełączmy się na naszą gałąź (branch) gdzie wcześniej pracowałyśmy&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout my-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Robimy rebase&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Możemy wrzucić zmiany na zdalne repozytorium&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Czasami gdy będziemy robić &lt;code&gt;git rebase&lt;/code&gt;, git może nie dać sobie rady sam z rozwiązywaniem konfliktów (czyli łączeniem plików modyfikowanych przez kilka osób). Wtedy do akcji wkraczamy my. Poprawnie rozwiązujemy konlikty i dodajemy nasze zmiany, tak by gita je widział. Następnie możemy dalej kontynłować rebase.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase develop
&lt;span class=&quot;c&quot;&gt;# rozwiązanie konfliktów&lt;/span&gt;
git add -u &lt;span class=&quot;c&quot;&gt;# dodanie wszystkich zmian do śledzenia&lt;/span&gt;
git rebase --continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Musimy porozmawiać jeszcze o jedne rzeczy. Czasami nasze zmiany są już na zdalnym repozytorium a my musimy/chcemy zrobić rebase. Po zakończeniu całej operacji chcemy umieści zmiany z powrotem na zdalnym repozytorium. Jednak tym razem &lt;code&gt;git push&lt;/code&gt; nam nie zadziała. W takie sytuacji możemy zrobić tak:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push -f origin my-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uwaga! Z tym poleceniem trzeba być bardzo uważnym. Polecenie to nadpisze wszystkie zmiany na wybranej przez nas gałęzi (branch) zmianami, które miałyśmy lokalnie. Jeżeli tylko my pracujemy na tej gałęzi nic się nie stanie. Jeżeli współdzielimy tą gałąź z kimś innym, trzeba myśleć o tym, że możemy usunąć czyjeś zmiany. Musimy wiedzieć co robimy i zdawać sobie sprawę z konsekwencji.&lt;/p&gt;

&lt;p&gt;Gdybyśmy chcieli zrezygnować z rebase, możemy do tego celu użyć polecenia:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To wszystko na dzisiaj. Pokazałam Wam jak można używać &lt;code&gt;git rebase&lt;/code&gt;. Mam nadzięję, że było to dla Was pomocne. Jeżeli miacie jakieś pytania lub sugestie zapraszam do komentowania. Do zobaczenia następnym razem!&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Apr 2016 00:00:00 -0400</pubDate>
        <link>/pl/git-rebase</link>
        <guid isPermaLink="true">/pl/git-rebase</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
        <category>narzędzia</category>
        
        <category>środowisko</category>
        
      </item>
    
      
      <item>
        <title>Podstawowe użycie Git</title>
        <description>&lt;p&gt;&lt;a href=&quot;/pl/what-is-git&quot;&gt;Ostatnim razem&lt;/a&gt; mówiliśmy trochę o tym dlaczego &lt;strong&gt;Git&lt;/strong&gt; jest bardzo użytecznym narzędziem, zwłaszcza dla programistów. Dzisiaj chciałabym się skupić na tym, jak zacząć używać narzędzia Git przynajmniej w bardzo podstawowym zakresie. Pokarzę kilka najczęściej używanych poleceń, ale jeżeli chcecie się dowiedzieć więcej polecam &lt;a href=&quot;https://git-scm.com/documentation&quot;&gt;dokumentację&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Zaczynamy!&lt;/h2&gt;

&lt;p&gt;Git to &lt;strong&gt;rozproszonym systemem wersjonowania&lt;/strong&gt; (distributed repository lub distributed version control system). To znaczy, że każdy w zespole ma u siebie lokalnie całą historię zmian. Dzięki temu można dodać do repozytorium kolejne swoje zmiany bez połączenia z Internetem. Jednak najważniejszą cechą takiego systemu kontroli wersji jest to, że nawet gdy u jednej osoby zmiany zostaną utracone reszta zespołu ciągle posiada całą historię prac. W przypadku scentralizowanego systemy kontroli wersji to problemy w centralnym repozytorium powodują utratę zmian u wszystkich członków zespołu.&lt;/p&gt;

&lt;p&gt;Mówiąc o narzędziu Git będę używać wiersza poleceń. Myślę, że taki sposób użycia jest łatwiejszy do zrozumienia co tak naprawdę się dzieje niż używanie jakichś graficznych programów.&lt;/p&gt;

&lt;h2&gt;Po pierwsze - konfiguracja&lt;/h2&gt;

&lt;p&gt;Gdy używamy narzędzia Git, chcemy wiedzieć które zmiany były zrobione przez nas. By to ustawić wykonujemy następujące polecenia:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.name &amp;quot;Your Name&amp;quot;
git config --global user.email you_email_address@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Możemy też ustawić by polecenia z narzędzia Git wyświetlały się na kolorowo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Stworzenie swojego pierwszego repozytorium&lt;/h2&gt;

&lt;p&gt;Aby zacząć używać narzędzia Git w naszym projekcie, przechodzimy do katalogu naszego projektu za pomocą terminala (wiersza poleceń) i inicjujemy narzędzie Git w środku.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To polecenie rozpocznie pracę z Git tylko lokalnie na naszym komputerze. By można było umieścić nasze repozytorium na serwerze będziemy potrzebować narzędzi takich jak &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; lub &lt;a href=&quot;https://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;. Dobrze, teraz możemy zacząć prawdziwą pracę z naszym repozytorium. Bardzo przydatną komendą będzie:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To polecenie mówi nam co zmieniło się od ostatniego użycia narzędzia Git. Przykładowo mamy plik napisany w języku Ruby.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_word.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ten plik nie jest śledzony przez Git. W takiej sytuacji możemy zobaczyć coś takiego:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
#
# Initial commit
#
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#   hello_word.rb
#
# nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Pierwszy commit&lt;/h2&gt;

&lt;p&gt;Teraz musimy powiedzieć do naszego systemu kontroli wersji: &lt;em&gt;Proszę, śledź zmiany w tym pliku&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add hello_word.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Po wykonaniu tego polecenia sprawdzamy status naszych zmian &lt;code&gt;git status&lt;/code&gt; i otrzymujemy:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
#
# Initial commit
#
# Changes to be commited:
#   (use &amp;quot;git rm --cached  &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#   new file: hello_word.rb
#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz możemy zrobić &lt;strong&gt;commit&lt;/strong&gt;. Można powiedzieć, że commit to takie przygotowane do wysłania pudełko. Do pudełka wkładamy wszystkie elementy, które wspólnie tworzą jedną całość. Ponieważ zmieniliśmy tylko jeden plik, to nasz commit będzie składał się tylko z niego.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;Create a hello function&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz Git status pokazuje:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
# nothing to commit (working directory clean)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jeżeli zmienimy naszą funkcję, to zobaczymy:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_word.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git status

# On branch master
# Changed but not updated:
#
#  modified: hello_word.rb
# no changes add to commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jeżeli chcemy zrobić nowy commit, musimy dodać nasze zmiany do pudełka:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add hello_word.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;i oznaczyć opisem co jest w środku:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;Change our hello function&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Wysłanie/ściągnięcie zmian do/z zdalnego repozytorium&lt;/h2&gt;

&lt;p&gt;W tej chwili mamy zapisane nasze zmiany tylko lokalnie. Teraz chcielibyśmy wysłać je gdzieś na zewnątrz (na jakiś serwer), tak byśmy mogli wymieniać się naszymi zmianami z całym zespołem. Te dwie czynności mają swoje nazwy. Wysyłanie zmian na serwer to &lt;strong&gt;push&lt;/strong&gt; a ściąganie to &lt;strong&gt;pull&lt;/strong&gt;. Do tego posłuży nam &lt;strong&gt;GitHub&lt;/strong&gt; ale można też korzystać z innych rozwiązań.&lt;/p&gt;

&lt;p&gt;Kiedy mamy już swoje konto na GitHub, tworzymy &lt;strong&gt;nowe repozytorium&lt;/strong&gt;. A lokalnie w linii poleceń wykonujemy następującą komendę:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git remote add origin link_to_or_repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nic się nie martwcie, po stworzeniu nowego repozytorium, GitHub pokaże Wam wszystkie komendy jakie potrzebujecie wykonać. Wystarczy tylko skopiować je do swojego terminala. W skrócie komenda ta mówi nam: &lt;em&gt;Hej, od tej chwili mam zdalne repozytorium (czyli mam repozytorium na serwerze) i nazywa się ono origin&lt;/em&gt;. Gdy będziemy chcieli wysłać tam nasze zmiany to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mówimy wtedy do narzędzia Git: &lt;em&gt;Wyślij mój kod na gałąź (branch)&lt;/em&gt; &lt;code&gt;master&lt;/code&gt; &lt;em&gt;na repozytorium o nazwie&lt;/em&gt; &lt;code&gt;origin&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;Co to jest branch (gałęź)?&lt;/h4&gt;

&lt;p&gt;Branch jest jak ścieżka. W naszym projekcie mamy wiele ścieżek, każda z nich może wyglądać inaczej, ale w danym momencie możemy iść tylko jedną ścieżką. Domyślnie po stworzeniu repozytorium Git ma jedną ścieżkę, którą nazywa &lt;code&gt;master&lt;/code&gt;. Po poleceniu, które widzimy nieco wyżej GitHub zapyta się nas o naszą nazwę użytkownika (login) i hasło. Gdy podamy te informacje nasze zmiany znajdą się na serwerze.&lt;/p&gt;

&lt;h2&gt;Ostatnia rzecz!&lt;/h2&gt;

&lt;p&gt;Kiedy pracujemy z innymi osobami nad jednym projektem to tak jak już wspominałam chcemy się wymieniać naszymi zmianami. Do tej pory nauczyliśmy się wysyłać na serwer zmiany teraz chcielibyśmy je stamtąd pobrać:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To polecenie &lt;strong&gt;pull&lt;/strong&gt; spowoduje, że pobierzemy z naszego repozytorium o nazwie &lt;code&gt;origin&lt;/code&gt; bieżący branch (czyli tą naszą ścieżkę). Ponieważ mamy tylko jeden branch - &lt;code&gt;master&lt;/code&gt; wszystkie zmiany zostaną dociągnięte właśnie dla gałęzi (branch) &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To na razie tyle. Szybki przegląd podstawowych poleceń używanych do obsługi systemu kontroli wersji jakim jest Git. Mam nadzieje, że Wam się podobało. Jeżeli chcielibyście dowiedzieć sie czegoś więcej lub chcielibyście bym coś bardziej wytłumaczyła zostawcie komentarz. Do zobaczenia następnym razem. Pa!&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Feb 2016 00:00:00 -0500</pubDate>
        <link>/pl/git-usage</link>
        <guid isPermaLink="true">/pl/git-usage</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
        <category>narzędzia</category>
        
        <category>środowisko</category>
        
      </item>
    
      
      <item>
        <title>Lambda w Ruby</title>
        <description>&lt;p&gt;Niedawno miałam sytuację w której pracowałam z różnymi (choć pod pewnymi względami podobnymi) kolekcjami w Ruby. Te kolekcje miały bardzo podobne metody do przeszukiwania względem nazwy. W tym konkretnym przypadku zdecydowałam się na skorzystanie z lambdy. Zobaczcie jak to wyglądało.&lt;/p&gt;

&lt;p&gt;Tak wyglądał kod przed zmianą:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@first_collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To nie jest zły kod, ale w innych miejscach można było spotkać coś bardzo podobnego. Przykładowo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@sedond_collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Zdecydowałam się na użycie lambda. Stworzyłam metodę, która generowała mi lambdę dla różnych kolekcji a jako argument otrzymywała nazwy, po których miała przeszukiwać kolekcję. Oto ta metoda:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jak można tego użyć?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To rozwiązanie zmniejszyło znacznie ilość powtórzeń pokazanego na początku kodu. I co najważniejsze kolekcja jest deklarowana tylko w jednym miejscu. Mówiąc szczerze ten sposób rozwiązania był tylko przejściowy, ponieważ końcowym etapem było wyodrębnienie kolekcji do osobnej klasy. Jednak na ten konkretny moment było to rozwiązanie dla mnie zupełnie satysfakcjonujące i przede wszystkim proste.&lt;/p&gt;

&lt;p&gt;Jeżeli chcielibyście się dowiedzieć czegoś więcej o lambdach i programowaniu funkcyjnym, zapraszam do przejrzenia mojej prezentacji na ten temat jest dostępna &lt;a href=&quot;http://womanonrails.github.io/presentation-functional-programming-in-ruby/#1&quot;&gt;tutaj&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mam nadzieje, że było to dla Was interesujące. Zostawcie komentarz i do zobaczenia następnym razem.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Feb 2016 00:00:00 -0500</pubDate>
        <link>/pl/lambda</link>
        <guid isPermaLink="true">/pl/lambda</guid>
        
        <category>Ruby</category>
        
        <category>refactoring</category>
        
        
        <category>Ruby</category>
        
        <category>refactoring</category>
        
      </item>
    
      
      <item>
        <title>Global Game Jam</title>
        <description>&lt;p&gt;&lt;br&gt;
Czas: &lt;em&gt;2016-01-29 17:00 – 2016-01-31 19:00&lt;/em&gt;&lt;br&gt;
Miejsce: &lt;em&gt;Cieszyn, PL&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Uwielbiam robić rzeczy związane z technologią. Tym razem uczestniczyłam w &lt;a href=&quot;http://globalgamejam.org/&quot;&gt;Global Game Jam&lt;/a&gt; w Cieszynie. To był mój trzeci raz. &lt;strong&gt;Co to Global Game Jam?&lt;/strong&gt; To hakaton trwający 48 godzin. Gromadzą się tam ludzie, który chcą tworzyć gry komputerowe. Każdego roku jestem pod ogromnym wrażeniem pomysłowości, talentu i realizacji projektów, które tam powstają. Jeżeli chcecie zobaczyć więcej możecie zajrzeć &lt;a href=&quot;https://www.youtube.com/watch?v=-g4BbTNCgck&quot;&gt;tutaj&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Jan 2016 00:00:00 -0500</pubDate>
        <link>/pl/global-game-jam</link>
        <guid isPermaLink="true">/pl/global-game-jam</guid>
        
        <category>GGJ</category>
        
        <category>Cieszyn</category>
        
        
        <category>podróże</category>
        
        <category>warsztaty</category>
        
        <category>wydarzenia</category>
        
      </item>
    
      
      <item>
        <title>Co to jest git?</title>
        <description>&lt;p&gt;Chciałabym z Wami zacząć dzisiaj krótką serię 2-3 artykułów na temat &lt;strong&gt;Gita&lt;/strong&gt;. To będzie naprawdę podstawa. W Internecie jest wiele różnego rodzaju kursów na temat Gita. A ja nie chciałabym robić kolejnego. Jeżeli chciałybyście dowiedzieć się czegoś więcej na ten temat, osobiście mogę polecić 2 kursy na temat Gita z CodeSchool. Możecie zacząć &lt;a href=&quot;https://www.codeschool.com/courses/try-git&quot;&gt;tutaj&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nie będę tutaj podawać definicji tego czym jest Git, bo możecie ją znaleźć na &lt;a href=&quot;https://en.wikipedia.org/wiki/Git_(software)&quot;&gt;wiki&lt;/a&gt; czy w &lt;a href=&quot;https://git-scm.com/documentation&quot;&gt;dokumentacji Gita&lt;/a&gt;. Powiem tylko, że git to &lt;strong&gt;system kontroli wersji&lt;/strong&gt;. Teraz zajmiemy się zrozumieniem do czego można wykorzystać Gita i dlaczego jest to naprawdę świetne narzędzie.&lt;/p&gt;

&lt;p&gt;Czy zdarzają się Wam sytuacje, w których pracujecie wspólnie z innymi nad tymi samymi plikami? Sytuacje takie jak: projekt zespołowy w szkole, na uczelni? Może jakaś duża aplikacja internetowa? Prezentacja lub raport dla szefa? Lub inne zadanie, gdzie każdy w zespole ma dostęp do tych samych plików? Ja spotykam się z taką sytuacją każdego dnia w swojej pracy. Pracuję w zespole składającym się z około 8 osób. A może pracujecie tylko dla siebie, ale nie możecie sobie pozwolić na utratę Waszych danych? Może jesteście pisarzami i przykładowo piszecie książkę?&lt;/p&gt;

&lt;h2&gt;Praca tylko dla siebie&lt;/h2&gt;

&lt;p&gt;Załóżmy, że pracujemy sami. Piszemy książkę. Pracujemy nad nią od dwóch lat. Nagle komputer się zepsuł, przypadkowo usunęliśmy plik z danymi lub po prostu chcemy wrócić do poprzedniej wersji, bo była znacznie lepsza, niż ta po ostatnich poprawkach. Co teraz? Wiem dzisiaj istnieje już wiele sposobów, dzięki którym możemy zapobiec tego typu sytuacją. Mamy Dropbox, dyski zewnętrzne czy pocztę internetową (na którą wysyłamy koleją wersję naszych danych). Nawet programy, takie jak LibreOffice potrafią zapamiętywać ostatnie dokonane zmiany. Git też to potrafi. Pamięta on historię wszystkich zapisanych zmian. Można dzięki temu wrócić do dowolnej starszej wersji plików.&lt;/p&gt;

&lt;p&gt;Jeżeli przykład ten nie przekonał Cię, że Git może być użytecznym narzędziem, to zapraszam do kolejnego przykładu.&lt;/p&gt;

&lt;h2&gt;Praca zespołowa&lt;/h2&gt;

&lt;p&gt;Każdy w naszym zespole ma dostęp do projektu na swoim własnym komputerze. Przykładowo mamy jeden plik. Kochamy język Ruby, więc plik będzie pisany właśnie w tym języku. A wygląda on tak:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Każdym ma ten plik lokalnie na swoim komputerze. Teraz ja dostaję zadanie, by zmienić napisaną w nim metodę, tak by zwracała nie &lt;code&gt;hello&lt;/code&gt; tylko &lt;code&gt;hello world&lt;/code&gt;. Po zmianie plik wygląda następująco:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz w jakiś sposób muszę podzielić się tą zmianą z innymi osobami w zespole. Ale jak? Przez e-mail? Dropbox? Pendrive? Każde z tych rozwiązań jest dość bolesne w tym przypadku. Nasz pierwszy problem to: &lt;strong&gt;1. Aktualizacja projektu (jak mieć dostęp do bieżącej wersji projektu)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ten problem jest możliwy do rozwiązania. Czasem rozwiązanie może być pracochłonne i nużące, ale jesteśmy w stanie sobie z nim poradzić. Natomiast, co zrobimy w przypadku, gdy dwie osoby zmieniają dokładnie ten sam fragment kodu? Przykładowo druga osoba zmienia nazwę metody, nad którą ja w tym czasie pracuje. Kod tej osoby wygląda następująco:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Teraz ja wysyłam moje zmiany do wszystkich, druga osoba robi to samo. Które zmiany powinny zostać? Które zmiany są ważniejsze? A może zależy nam na czymś takim:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# hello_world.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_hi&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Połączone zmiany. W jaki sposób możemy ten problem rozwiązać? Moglibyśmy mieć taką osobę w zespole, która by to dla nas przygotowywała. Rozmawialibyśmy z tą osobą o zmianach, jakie wprowadziliśmy i ona starałaby się rozwiązywać takie konflikty za nas. Czy myślicie tak jak ja że to bardzo zły pomysł? Jeżeli tak do dobrze, bo to katastrofalny pomysł. No i kto chciałby być taką osobą w zespole? Pojawia się nam drugi chyba jeszcze ważniejszy problem: &lt;strong&gt;2. W jaki sposób łatwo łączyć zmiany wprowadzone przez różne osoby?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Git jest takim narzędziem, które w wielu przypadkach automatycznie łączy zmiany pochodzące od różnych osób. Jest to bardzo przydatne narzędzie zwłaszcza przy zespołowych projektach. Ale! (zawsze musi być jakieś ale). O ile w bardzo przystępny sposób za pomocą Gita można poruszać się po plikach tekstowych (programy, książki, artykuły) i ich zmianach. To znacznie ciężej jest poruszać się po plikach graficznych. Obrazki to pliki binarne (w większości przypadków, za wyjątkiem np. svg). Kiedy zmienimy coś w takim pliku ciężko jest nam obserwować zmiany.&lt;/p&gt;

&lt;p&gt;Przykładowo, nasz obrazek może dla komputera wyglądać następująco:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|
00000010  00 00 04 c9 00 00 01 7e  08 06 00 00 01 ef a0 7d  |.......~.......}|
00000020  68 00 00 00 09 70 48 59  73 00 00 2e 23 00 00 2e  |h....pHYs...#...|
00000030  23 01 78 a5 3f 76 00 00  00 19 74 45 58 74 53 6f  |#.x.?v....tEXtSo|
00000040  66 74 77 61 72 65 00 41  64 6f 62 65 20 49 6d 61  |ftware.Adobe Ima|
00000050  67 65 52 65 61 64 79 71  c9 65 3c 00 00 36 8c 49  |geReadyq.e&amp;lt;..6.I|
00000060  44 41 54 78 da ec 9c 61  6e 83 30 0c 46 47 c4 85  |DATx...an.0.FG..|
00000070  a6 75 47 da a9 76 a4 75  da 91 98 f8 41 95 a6 31  |.uG..v.u....A..1|
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nasz komputer w łatwy sposób jest wstanie zinterpretować ciągi tych liczb i literek w postaci kształtów i kolorów. My niestety nie. Więc gdy zmienimy coś na naszym obrazku, nie potrafimy po jakimś czasie stwierdzić co to była za zmiana. Chyba, że otworzymy ten obrazek w odpowiednim programie. Rozumiecie co mam na myśli? Nie chodzi o to, że nigdy nie dodajemy plików graficznych do Gita. Chodzi o to, że bez dodatkowych narzędzi ciężko nam śledzić na takich plikach zmiany.&lt;/p&gt;

&lt;p&gt;Mam nadzieję, że ten artykuł był dla Was pomocny, w zrozumieniu tego po co przydaje się takie narzędzie jak Git. W następnym artykule chciałabym opisać podstawowe użycie tego narzędzia. Jeżeli macie jakieś pytania lub sugestie, dajcie znać w komentarzach. Do zobaczenia następnym razem. Pa!&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Dec 2015 00:00:00 -0500</pubDate>
        <link>/pl/what-is-git</link>
        <guid isPermaLink="true">/pl/what-is-git</guid>
        
        <category>git</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
        <category>narzędzia</category>
        
        <category>środowisko</category>
        
      </item>
    
      
      <item>
        <title>Coderetreat 2015 Kraków</title>
        <description>&lt;p&gt;W zeszłą sobotę uczestniczyłam w niesamowitym wydarzeniu – &lt;a href=&quot;http://coderetreat.org/&quot;&gt;Global Day of Coderetreat&lt;/a&gt; w Krakowie. &lt;strong&gt;Coderetreat&lt;/strong&gt; to szczególny dzień w roku, w którym programiści poświęcają swój czas nie tyle tworzeniu nowych funkcjonalności, ale skupiają się na &lt;strong&gt;kodzie dobrej jakości&lt;/strong&gt;. Jest to dzień, w którym zatrzymujemy się na chwilę, by poświęcić czas na bycie lepszym programistą/programistką.&lt;/p&gt;

&lt;h2&gt;Jak wygląda taki Coderetreat?&lt;/h2&gt;

&lt;p&gt;Cały dzień podzielony jest na 6-7 sesji kodowania. W naszym przypadku było ich dokładnie 6. W każdej z tych sesji staramy się rozwiązać problem &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&quot;&gt;Gry w życie&lt;/a&gt;. Jest to dość prosty problem, ale rozwiązanie go nie jest głównym celem Coderetreat. Ważniejszy jest sposób dojścia do rozwiązania. Każda sesja trwa 45 minut, po czym następuje 15 minut podsumowania tego, co zostało zrobione i w jaki sposób. Przez wszystkie sesje procujemy w trybie &lt;strong&gt;ping pong pair porgramming&lt;/strong&gt; z narzuconymi pewnymi ograniczeniami. Pair programming ponieważ pracujemy w parach, ping pong bo zmieniamy się przy klawiaturze. Pierwsza osoba pisze test, druga pisze kod a później pierwsza robi refaktoryzację. Teraz nadszedł czas by powiedzieć coś na temat ograniczeń. Mogą być one na prawdę różne. Jedne są prostsze a inne trudniejsze. Poniżej zamieszczam Wam ograniczenia, jakie mieliśmy podczas naszych sesji.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Bez typów prymitywnych&lt;/strong&gt; – opakuj wszystkie typy prymitywne i ciągi znaków&lt;/p&gt;

&lt;p&gt;W tej sesji nie można było przekazywać typów prostych pomiędzy klasami/obiektami. Każdy taki element musiał być otoczony bardziej złożonym obiektem. Na początku posiadanie takich prostych obiektów w projekcie jest przyjemne i łatwe. W przyszłości jednak, takie zachowanie może nas dużo kosztować, nie tylko czasu. Teraz wiem, że muszę się dwa razy zastanowić zanim zostawię taki prosty obiekt w swoim kodzie. Dodatkowo sesja ta był ciekawa jeszcze z jednego powodu. Miałam możliwość wymienienia się poglądami na ten temat z inną kobietą. Co jeszcze na razie w świecie IT jest luksusem ;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Programowanie funkcyjne&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nasz cały kod nie mógł być mutowalny, to znaczy że stanu obiektu nie mógł się zmieniać wewnątrz metody. Czy pamiętacie funkcje z matematyki? One zawsze dostawały jakiś argument i zwracały wartość. Tak było też podczas tej sesji. Dodatkowo tym razem ustawiałam sobie poprzeczkę jeszcze wyżej. Nie programowałam w Ruby ale w &lt;a href=&quot;http://livescript.net/&quot;&gt;LiveScript&lt;/a&gt;. Było to moje pierwsze zetknięcie z tym językiem. Jest on bardzo podobny do &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;, więc ciekawie było go spróbować. Podczas tej sesji zwróciłam szczególną uwagę na to, jak prosto testuje się takie matematyczne metody. Wystarczy sprawdzić, co zostaje zwrócone dla konkretnych argumentów i koniec.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rozkazuj, nie proś&lt;/strong&gt; – brak właściwości, brak metod ustawiających i odczytujących pola obiektu (setter, getter)&lt;/p&gt;

&lt;p&gt;Tym razem nasze metody nie mogły pytać o dane, miały mówić obiektom co mają zrobić. Każda metoda nic nie zwracała. Taki kod jest bardzo ciężki do testowania. Obiekty są w tym przypadku jak czarne skrzynki – nie wiemy co się znajduje w środku. Kod jest enkapsulowany, czyli oddzielony od tego co jest na zewnątrz, obiekty zajmują się same sobą i niczym więcej. Była to dla mnie bardzo interesująca sesja, nie tylko ze względu na ograniczenie jakie otrzymaliśmy, ale również ze względu na programowanie w parze z programistą języka Java. Kiedy pracuje się w konkretnej technologi/języku zaczynamy myśleć przez pryzmat tego języka. Nasz mózg skupia się tylko na rozwiązaniu problemu w taki sposób, jaki oferuje nam język/technologia. Nawet nie wiemy, że obok jest inne rozwiązanie. Dlatego tak ważne jest ciągłe doskonalenie i rozwijanie swoich umiejętności, &lt;strong&gt;wychodzenie poza strefę komfortu&lt;/strong&gt;. Jest to prawda nie tylko w programowaniu, ale także w życiu. Duże podziękowania i szacunek dla mojego programistycznego partnera, który ciągle chce się rozwija.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;3 minutowe cykle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;W bieżącej sesji mieliśmy tylko 3 minuty by zakończyć jeden cykl TDD. Test, kod, refaktoring. Jeżeli nie udało nam się zakończyć całego cyklu, musieliśmy usunąć wszystko, co w tym cyklu zrobiliśmy i zacząć cykl od nowa. Ta sesja pozwoliła mi zrozumieć, że często w pracy chcemy od razu ogarnąć cały problem. Tworzymy ogrom jeszcze nie użytecznego kodu, tu trochę tam trochę, wszędzie panuje bałagan bo przecież “to nie jest jeszcze skończone”. Czasem jednak warto podejść do problemy za pomocą &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_viable_product&quot;&gt;MVP&lt;/a&gt; (Minimum Vable Product). Małe elementy, które działają już teraz. Tak było właśnie w tej sesji. Po każdych 3 minutach mieliśmy gotową działającą małą cząstkę oprogramowania. Malutką ale działającą.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Brak pętli, brak warunków&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Podczas tej sesji pisałam kod w &lt;a href=&quot;http://es6-features.org/&quot;&gt;JavaScript ES6&lt;/a&gt; (poza moją strefą komfortu). Tym razem nie mogliśmy używać ani warunków ani pętli. To była dla mnie najtrudniejsza sesja. Każdego dnia podczas pisania kodu wielokrotnie korzystamy z pętli i warunków. Nawet nie zdajemy sobie sprawy, jak często. Zamiast pętli można wykorzystać rekurencję tylko jak wyznaczyć warunek zatrzymania? To nie było takie trywialne. Bardzo przydało się w tym momencie myślenie całkowicie poza schematem. Sesja ta dała mi dużo do myślenia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Milcząca sesja&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ostatnia sesja nie pozwalała nam się ze sobą komunikować. Nie mogliśmy mówić, pisać ani pokazywać. Jedyna komunikacja jaka była dozwolona, to komunikacja testy – kod. Najciekawsze jest to, że każdego dnia się z tym spotykamy. Dostajemy jakiś fragment kodu do zmiany i nie mamy możliwości porozmawiania z osobą, która go napisała. Musimy domyślić się, co dany kod robi z testów (jeżeli takie są) i z tego jak jest napisany. Podczas tej iteracji pracowałam w parze z moim najlepszym przyjacielem. Oby dwoje myśleliśmy, że skoro tak długo i dobrze się znamy, to będzie to bułka z masłem. Ale gdy nie można sobie pewnych spraw wyjaśnić lub ustalić wspólnego planu działania nie jest tak łatwo. Każdy z nas miał inne spojrzenie na ten problem. Każdym myślał o nim w innym sposób. Tylko dobre, czytelne testy i dobrej jakości, przejrzysty kod mógł pomóc w tej sytuacji. To jest po protu coś o czym każdy programista powinien pamiętać.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/coderetreat/first-session.jpg&quot;&gt;&lt;img src=&quot;/images/coderetreat/first-session.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;/images/coderetreat/summary.jpg&quot;&gt;&lt;img src=&quot;/images/coderetreat/summary.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/coderetreat/summary2.jpg&quot;&gt;&lt;img src=&quot;/images/coderetreat/summary2.jpg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/images/coderetreat/summary3.jpg&quot;&gt;&lt;img src=&quot;/images/coderetreat/summary3.jpg&quot;&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/coderetreat/session5.jpg&quot;&gt;&lt;img src=&quot;/images/coderetreat/session5.jpg&quot;&gt;&lt;/a&gt;
  &lt;figcaption&gt;Kilka wspomnień z tego krakowskiego Coderetreat&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br&gt;
I oto koniec. Nasza ostatnia sesja zakończona. Podsumowując ten dzień uważam, że to był dobrze zainwestowany czas. Wiele przemyśleń i nowe spojrzenie. Kolejny raz Coderetreat otworzył mi oczy i pokazał jak ważne jest dbanie o jakość kodu. Życzę każdemu wzięcia udziału w tym wydarzeniu, zwłaszcza tak dobrze przygotowanym jak w Krakowie. Do zobaczenia w krótce. Pa!&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Nov 2015 00:00:00 -0500</pubDate>
        <link>/pl/coderetreat</link>
        <guid isPermaLink="true">/pl/coderetreat</guid>
        
        <category>coderetreat</category>
        
        <category>event</category>
        
        <category>Kraków</category>
        
        
        <category>podróże</category>
        
        <category>warsztaty</category>
        
        <category>wydarzenia</category>
        
      </item>
    
      
      <item>
        <title>Warsztaty CoderDojo</title>
        <description>&lt;p&gt;&lt;br&gt;
Raz w tygodniu pomagam w organizacji warsztatów &lt;strong&gt;CoderDojo&lt;/strong&gt;. Warsztaty te przeznaczone są dla osób młodych (nie tylko wiekiem ale także duchem), które chcą nauczyć się czegoś o &lt;strong&gt;Informatyce&lt;/strong&gt;. Mówiąc Informatyka mam na myśli programowanie, tworzenie stron internetowych, gier, grafikę, druk 3D, animacje, video, roboty i wiele innych. Tak na prawdę tylko wyobraźnia ogranicza nasze możliwości. Na CoderDojo obowiązuje tylko jedna zasada: &lt;strong&gt;Bądź fajny&lt;/strong&gt;. CoderDojo to miejsce gdzie każdy powinien czuć się dobrze i móc uczyć się nowych rzeczy.&lt;/p&gt;

&lt;p&gt;Przy okazji chciałabym powiedzieć, że &lt;strong&gt;nieustannie szukamy nowych mentorów&lt;/strong&gt;. Każdy, komu podoba się ta inicjatywa jest mile widziany. Nie trzeba umieć te wszystkie rzeczy, aby do nas dołączyć. Wystarczy pozytywne nastawienie i chęć nauki siebie i innych. &lt;strong&gt;Serdecznie zapraszam!&lt;/strong&gt; To jedyna okazja by przekonać się co młodzi ludzie potrafią zrobić. Oni na prawdę są niesamowici. Są nawet lepsi niż my. Mają swoje pasje i chętnie dzielą się nimi z innymi.&lt;/p&gt;

&lt;p&gt;Jeżeli chciałbyś/chciałabyś zobaczyć jak wyglądają zajęcia odwiedź nas lub obejrzyj &lt;a href=&quot;https://www.youtube.com/watch?v=G_tTBd_ei3s&quot;&gt;filmik&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jeżeli zainteresowała Cię ta inicjatywa to po więcej informacji zapraszam na &lt;a href=&quot;https://coderdojo.com/&quot;&gt;https://coderdojo.com/&lt;/a&gt; lub &lt;a href=&quot;https://coderdojo.org.pl/&quot;&gt;https://coderdojo.org.pl/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Oct 2015 00:00:00 -0400</pubDate>
        <link>/pl/coderdojo-workshop</link>
        <guid isPermaLink="true">/pl/coderdojo-workshop</guid>
        
        <category>CoderDojo</category>
        
        <category>event</category>
        
        
        <category>podróże</category>
        
        <category>warsztaty</category>
        
        <category>wydarzenia</category>
        
      </item>
    
      
      <item>
        <title>Bądź sobą – Jak radzić sobie z brakiem pewności siebie</title>
        <description>&lt;blockquote&gt;
&lt;p&gt;Bądź sobą, mów co czujesz bo tym, który się liczą nie będzie to przeszkadzać a Ci, którym będzie to przeszkadzać nie są ważni.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Dzisiaj chciałabym poruszyć bardzo ważny dla mnie temat. Temat dotyczący &lt;strong&gt;pewności siebie&lt;/strong&gt;. Nie wiem jak Wy ale ja często mam z tym problem. Temat ten powrócił do mnie ostatnio (gdy tylko zmieniłam projekt).&lt;/p&gt;

&lt;p&gt;Od około 4 tygodni pracuję w nowym projekcie. Nowym dla mnie, bo reszta zespołu pracuje nad tym projektem od około 2 lat. Projekt ten ma dość mocno złożoną logikę biznesową. Jak tylko zaczęłam nad nim pracować czułam się jak dziecko we mgle. Nawet teraz zdarzają mi się jeszcze takie sytuacje. Wszystko jest dla mnie nowe i ciężkie do zrozumienia.&lt;/p&gt;

&lt;p&gt;W takich momentach jak ten zaczyna do głosu dochodzić stres. Strach zaczyna mnie paraliżować. Nie potrafię skupić się na zadaniu a na dodatek w głowie słyszę takie głosy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;Jesteś głupia.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;Jesteś najgorszym programistą na świecie.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;Nigdy tego nie zrozumiesz.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;Jesteś bezużyteczna.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;Nie powinno tu Ciebie być.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;Nie pasujesz tu.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
Mój własny mózg krzywdzi mnie i mówi mi, że nie jestem wystarczająco dobra. Jak w takie sytuacji mogę się skupić na tym co mam zrobić? Jak być efektywna? Jak sobie z tym poradzić? &lt;strong&gt;Poddać się?&lt;/strong&gt; Przestać robić to co należy i zacząć płakać? &lt;strong&gt;NIE!&lt;/strong&gt; Nawet jeżeli to była pierwsza rzecz jaka przychodzi nam do głowy. Nie zawsze pierwszy pomysł jest najlepszy. Wiem, że to co teraz powiem jest bardzo trudne do wykonania i łatwiej powiedzieć niż zrobić, ale uwierzcie mi sama też tak robię. Trzeba zacząć walczyć z własnym umysłem. Zapytajmy się sami: Czy ja na prawdę jestem tak beznadziejna? Czy naprawdę jestem głupia? Nie znam tej jednej rzeczy, ale czy to znaczy, że na niczym się nie znam? Czy naprawdę jestem bezużyteczna? Myślmy realnie i obiektywnie. Postarajmy się przemyśleć wszystkie słowa jakimi bombarduje nas mózg. Zobaczymy że wcale nie jest aż tak źle jak się na początku wydawało.&lt;/p&gt;

&lt;p&gt;To dopiero pierwszy krok by zyskać więcej pewności siebie. Przed nami daleka droga z wieloma niebezpieczeństwami. Teraz musimy zejść głębiej. Zastanówmy się dlaczego tak myślę? Dlaczego tak bardzo mnie stresują takie sytuacje? Czy chcemy komuś coś udowodnić? Czy nie chcemy nikogo rozczarować? A może boimy się utracić pracę? To teraz zastanówmy się co się stanie jeżeli, któraś z tych obaw się spełni? Nie powinniśmy nikogo udawać. Nie musimy nikomu niczego udowadniać. Jeżeli osoby dla nas ważne czy to rodzina, przyjaciele czy nawet szef naprawdę nas znają, nie będą zawiedzeni, jeżeli coś się nam nie uda. W takie sytuacji oni powinni akceptować nas takimi jakimi jesteśmy wraz z naszymi niedoskonałościami. Stosujmy zasadę, która w wolnym tłumaczeniu brzmi:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bądź sobą, mów co czujesz bo tym, który się liczą nie będzie to przeszkadzać a Ci, którym będzie to przeszkadzać nie są ważni.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Po prostu jeżeli komuś przeszkadza to kim jesteśmy to może nie jest to odpowiednia osoba, której warto poświęcać swój czas. Jeżeli stracimy pracę to znajdziemy koleją. A naukę którą dzięki temu otrzymaliśmy będziemy mogli wykorzystać w przyszłości.&lt;/p&gt;

&lt;p&gt;Moim zdaniem pewność siebie dotyczy zrozumienia swoje natury. Zrozumienia siebie samego. Tego co czujemy i co myślimy w danym momencie. I teraz złe myśli, które się pojawiają możemy zaakceptować lub odrzucić. To zależy od nas jaką postawę przyjmiemy. Pozytywną czy negatywną.&lt;/p&gt;

&lt;p&gt;Na koniec jeszcze jedna bardzo istotna rzecz. Praca nad sobą jest bardzo ciężka. Będą dni kiedy wszystko będzie przychodzić nam łatwo ale będą też i takie kiedy nie będziemy w stanie powadzić sobie z własnymi myślami. Ważne jest jedno. To że przegramy jedną bitwę nie znaczy, że przegramy całą wojnę. &lt;strong&gt;Ważne jest by się nie poddawać i ciągle próbować od nowa.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Podsumowując&lt;/h2&gt;

&lt;p&gt;Kiedy nasz umysł jest naszym wrogiem:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Zatrzymujemy się na chwilę&lt;/strong&gt; - zastanawiamy się czy to co on mówi do nas ma sens a może jest przesadzone. Staramy się rozwijać swoją samoświadomość.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Akceptujemy siebie i otaczający nasz świat&lt;/strong&gt; - Postarajmy się być dla siebie delikatni i wyrozumiali, tak jak jesteśmy dla innych.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Musimy zdecydować co jest dla nas ważne&lt;/strong&gt; i w jakim chcemy się rozwijać kierunku i podążać tą ścieżką.&lt;/li&gt;
&lt;li&gt;Jeżeli coś sprawia nam przyjemność, to nikt nie ma prawa powiedzieć nam, że się do tego nie nadajemy nawet nasz własny mózg.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;
Mam nadzieję, że czytanie tego wpisu sprawiło wam przyjemność. Jeżeli macie jakieś pytania lub sugestie – napiszcie komentarz. Dziękuję za poświęcony czas. Na koniec zamieszczam jeszcze odnośniki do prezentacji, które ciągle mnie inspirują w tym temacie.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yIxjC4T_f0U&quot;&gt;Lavendaire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=M1LZqN9O-cA&quot;&gt;Mimi Ikonn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=21j_OCNLuYg&quot;&gt;Life is easy. Why do we make it so hard?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=4tkkL9w2pw8&quot;&gt;Unconditional positive regard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lK-_D2QikME&quot;&gt;Imposter syndrome [PL]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 29 Sep 2015 00:00:00 -0400</pubDate>
        <link>/pl/be-yourself</link>
        <guid isPermaLink="true">/pl/be-yourself</guid>
        
        <category>samoświadomość</category>
        
        
        <category>samoświadomość</category>
        
      </item>
    
      
      <item>
        <title>Rails Girls Szczecin (22 – 23 Sierpień 2015)</title>
        <description>&lt;p&gt;&lt;br&gt;
Tym razem nie będę pisać o żadnych technicznych rzeczach. Tym razem chciałabym podzielić się z Tobą czymś, co było dla mnie ciekawym doświadczeniem. Czymś co przyniosło mi dużo radości i zabawy.&lt;/p&gt;

&lt;p&gt;W poprzedni weekend miałam przyjemność być trzeci raz mentorem na &lt;strong&gt;Rails Girls Szczecin&lt;/strong&gt;. Z warsztatami Rails Girls w Szczecinie wiążą się dla mnie zawsze bardzo miłe wspomnienia. Ludzie są niesamowicie mili i pomocni. Atmosfera jest cudowna. Jeżeli kiedykolwiek będziesz chciała (tak piszę przede wszystkim do Ciebie bo warsztaty Rails Girls są skierowane do dziewczyn i kobiet takich jak Ty) brać udział w warsztatach Rails Girls to polecam Szczecin. To naprawdę świetne miejsce żeby zacząć swoją przygodę z programowaniem.&lt;/p&gt;

&lt;p&gt;OK, ale przecież wielokrotnie byłam już mentorem na warsztatach &lt;strong&gt;Rails Girls&lt;/strong&gt;. Dlaczego właśnie o tych warsztatach piszę?&lt;/p&gt;

&lt;p&gt;To było dla mnie ciekawe doświadczenie ponieważ oprócz mentorowania zrobiłam coś jeszcze. Stworzyłam swój pierwszy filmik. Rezultaty mojej twórczości możesz zobaczyć &lt;a href=&quot;https://www.youtube.com/watch?v=UVAF7ndEJyE&quot;&gt;tutaj&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jeżeli masz jakieś pytania lub komentarze zostaw je poniżej. Pozdrawiam i do następnego razu!&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Aug 2015 00:00:00 -0400</pubDate>
        <link>/pl/rails-girls-szczecin</link>
        <guid isPermaLink="true">/pl/rails-girls-szczecin</guid>
        
        <category>event</category>
        
        <category>Rails Girls</category>
        
        <category>Szczecin</category>
        
        
        <category>podróże</category>
        
        <category>warsztaty</category>
        
        <category>wydarzenia</category>
        
      </item>
    
  </channel>
</rss>
